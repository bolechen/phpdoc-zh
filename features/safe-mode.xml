<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 323756 Maintainer: HonestQiao Status: ready -->
<!-- Reviewed: no Maintainer: HonestQiao -->
<!-- CREDITS: Gregory, dallas -->
<chapter xml:id="features.safe-mode" xmlns="http://docbook.org/ns/docbook">
 <title>安全模式</title>

 <para>
  PHP 的安全模式是为了试图解决共享服务器（shared-server）安全问题而设立的。在结构上，试图在
  PHP 层上解决这个问题是不合理的，但修改 web
  服务器层和操作系统层显得非常不现实。因此许多人，特别是 ISP，目前使用安全模式。
 </para>

 &warn.deprecated.feature-5-3-0.removed-5-4-0;
 
  <para>
   <table>
    <title>Changelog for <literal>safe mode</literal></title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.4.0</entry>
       <entry>
        Removed from PHP, and generates a fatal <constant>E_CORE_ERROR</constant>
        level error when enabled.
       </entry>
      </row>
      <row>
       <entry>5.3.0</entry>
       <entry>
        Deprecated, and <constant>E_DEPRECATED</constant> errors were added.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

 <sect1 xml:id="ini.sect.safe-mode">
  <title>保安措施和安全模式</title>
  <para>
   <table>
    <title>保安措施和安全模式配置指令</title>
    <tgroup cols="4">
     <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
     </thead>
     <tbody>
      <row>
        <entry><link linkend="ini.safe-mode">safe_mode</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
        <entry><link linkend="ini.safe-mode-gid">safe_mode_gid</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>自 PHP 4.1.0 起可用，在 PHP 5.4.0 中移除。</entry>
      </row>
      <row>
        <entry><link linkend="ini.safe-mode-include-dir">safe_mode_include_dir</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>自 PHP 4.1.0 起可用</entry>
      </row>
      <row>
        <entry><link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link></entry>
       <entry>""</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
        <entry><link linkend="ini.safe-mode-allowed-env-vars">safe_mode_allowed_env_vars</link></entry>
       <entry>"PHP_"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
        <entry><link linkend="ini.safe-mode-protected-env-vars">safe_mode_protected_env_vars</link></entry>
       <entry>"LD_LIBRARY_PATH"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   &ini.php.constants;
  </para>

  &ini.descriptions.title;

  <para>
   <variablelist>
    <varlistentry xml:id="ini.safe-mode">
     <term>
      <parameter>safe_mode</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       是否启用 PHP 的安全模式。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.safe-mode-gid">
     <term>
      <parameter>safe_mode_gid</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       默认情况下，安全模式在打开文件时会做 UID 比较检查。如果想将其放宽到
       GID 比较，则打开 safe_mode_gid。是否在文件访问时使用
       <literal>UID</literal>（&false;）或者
       <literal>GID</literal>（&true;）来做检查。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.safe-mode-include-dir">
     <term>
      <parameter>safe_mode_include_dir</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       当从此目录及其子目录（目录必须在 <link linkend="ini.include-path">include_path</link>
       中或者用完整路径来包含）包含文件时越过
       <literal>UID</literal>/<literal>GID</literal> 检查。
      </para>
      <simpara>
       从 PHP 4.2.0 开始，本指令可以接受和 <link
       linkend="ini.include-path">include_path</link>
       指令类似的风格用冒号（Windows 中是分号）隔开的路径，而不只是一个目录。
      </simpara>
      <simpara>
       指定的限制实际上是一个前缀，而非一个目录名。这也就是说“safe_mode_include_dir
       = /dir/incl”将允许访问“/dir/include”和“/dir/incls”，如果它们存在的话。如果希望将访问控制在一个指定的目录，那么请在结尾加上一个斜线，例如：“safe_mode_include_dir
       = /dir/incl/”。
      </simpara>
      <simpara>
       如果本指令的值为空，在 PHP 4.2.3 中以及 PHP 4.3.3 起具有不同
       <literal>UID</literal>/<literal>GID</literal>
       的文件将不能被包含。在较早版本中，所有文件都能被包含。
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.safe-mode-exec-dir">
     <term>
      <parameter>safe_mode_exec_dir</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       如果 PHP 使用了安全模式，<function>system</function> 和其它<link
       linkend="ref.exec">程序执行函数</link>将拒绝启动不在此目录中的程序。必须使用
       <literal>/</literal> 作为目录分隔符，包括 Windows 中。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.safe-mode-allowed-env-vars">
     <term>
      <parameter>safe_mode_allowed_env_vars</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       设置某些环境变量可能是潜在的安全缺口。本指令包含有一个逗号分隔的前缀列表。在安全模式下，用户只能改变那些名字具有在这里提供的前缀的环境变量。默认情况下，用户只能设置以
       PHP_ 开头的环境变量（例如 PHP_FOO = BAR）。
      </para>
      <note>
       <para>
        如果本指令为空，PHP 将使用户可以修改任何环境变量！
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.safe-mode-protected-env-vars">
     <term>
      <parameter>safe_mode_protected_env_vars</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       本指令包含有一个逗号分隔的环境变量的列表，最终用户不能用
       <function>putenv</function> 来改变这些环境变量。甚至在
       safe_mode_allowed_env_vars 中设置了允许修改时也不能改变这些变量。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   参见 <link linkend="ini.open-basedir">open_basedir</link>、
    <link linkend="ini.disable-functions">disable_functions</link>、
    <link linkend="ini.disable-classes">disable_classes</link>、
    <link linkend="ini.register-globals">register_globals</link>、
    <link linkend="ini.display-errors">display_errors</link> 和
    <link linkend="ini.log-errors">log_errors</link>。
  </para>

  <para>
   当 <link linkend="ini.safe-mode">safe_mode</link> 设置为 on，PHP
   将通过文件函数或其目录检查当前脚本的拥有者是否和将被操作的文件的拥有者相匹配。例如：
   <programlisting role="ls">
<![CDATA[
-rw-rw-r--    1 rasmus   rasmus       33 Jul  1 19:20 script.php
-rw-r--r--    1 root     root       1116 May 26 18:01 /etc/passwd
]]>
   </programlisting>
   运行 <filename>script.php</filename>
   <programlisting role="php">
<![CDATA[
<?php
 readfile('/etc/passwd');
?>
]]>
   </programlisting>
   如果安全模式被激活，则将会导致以下错误：
   <screen>
<![CDATA[
Warning: SAFE MODE Restriction in effect. The script whose uid is 500 is not
allowed to access /etc/passwd owned by uid 0 in /docroot/script.php on line 2
]]>
   </screen>
  </para>
  <para>
   同时，或许会存在这样的环境，在该环境下，宽松的 <literal>GID</literal>
   检查已经足够，但严格的 <literal>UID</literal>
   检查反而是不适合的。可以用 <link linkend="ini.safe-mode-gid">safe_mode_gid</link>
   选项来控制这种检查。如果设置为 <literal>On</literal>
   则进行宽松的 <literal>GID</literal> 检查；设置为
   <literal>Off</literal>（默认值）则进行 <literal>UID</literal> 检查。
  </para>
  <para>
   除了 <link linkend="ini.safe-mode">safe_mode</link> 以外，如果设置了
   <link linkend="ini.open-basedir">open_basedir</link>
   选项，则所有的文件操作将被限制在指定的目录下。例如：
   <programlisting role="ini">
<![CDATA[
<Directory /docroot>
  php_admin_value open_basedir /docroot
</Directory>
]]>
   </programlisting>
   如果在设置了 <link linkend="ini.open-basedir">open_basedir</link>
   选项后运行同样的 <filename>script.php</filename>，则其结果会是：
   <screen>
<![CDATA[
Warning: open_basedir restriction in effect. File is in wrong directory in
/docroot/script.php on line 2
]]>
   </screen>
  </para>
  <para>
   也可以单独地屏蔽某些函数。请注意
   <link linkend="ini.disable-functions">disable_functions</link>
   选项不能在 &php.ini; 文件外部使用，也就是说无法在 &httpd.conf;
   文件的按不同虚拟主机或不同目录的方式来屏蔽函数。如果将如下内容加入到
   &php.ini; 文件：
   <programlisting role="ini">
<![CDATA[
disable_functions readfile,system
]]>
   </programlisting>
   则会得到如下的输出：
   <screen>
<![CDATA[
Warning: readfile() has been disabled for security reasons in
/docroot/script.php on line 2
]]>
   </screen>
  </para>
  <warning>
   <para>
    当然，这些 PHP 限制不适用于可执行文件。
   </para>
  </warning>
 </sect1>

 <sect1 xml:id="features.safe-mode.functions">
  <title>被安全模式限制或屏蔽的函数</title>
  <para>
   以下<link linkend="features.safe-mode">安全模式</link>列表可能不完整或不正确。
   <!-- TODO: add &note.sm.*; to the functions mentioned here.
   That entity should link to this section -->
   <table>
    <title>安全模式限制函数</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>函数名</entry>
       <entry>限制</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><function>dbmopen</function></entry>
       <entry>&sm.uidcheck;</entry>
      </row>
      <row>
       <entry><function>dbase_open</function></entry>
       <entry>&sm.uidcheck;</entry>
      </row>
      <row>
       <entry><function>filepro</function></entry>
       <entry>&sm.uidcheck;</entry>
      </row>
      <row>
       <entry><function>filepro_rowcount</function></entry>
       <entry>&sm.uidcheck;</entry>
      </row>
      <row>
       <entry><function>filepro_retrieve</function></entry>
       <entry>&sm.uidcheck;</entry>
      </row>
      <row>
       <entry>ifx_*</entry>
       <entry>sql_safe_mode 限制, (!= safe mode)</entry>
       <!-- TODO: more info on sql-safe-mode -->
      </row>
      <row>
       <entry>ingres_*</entry>
       <entry>sql_safe_mode 限制, (!= safe mode)</entry>
       <!-- TODO: more info on sql-safe-mode -->
      </row>
      <row>
       <entry>mysql_*</entry>
       <entry>sql_safe_mode 限制, (!= safe mode)</entry>
       <!-- TODO: more info on sql-safe-mode -->
      </row>
      <row>
       <entry><function>pg_loimport</function></entry>
       <entry>&sm.uidcheck;</entry>
       <!-- source TODO: there is no PHP-warning for that safe-mode-restriction -->
      </row>
      <row>
       <entry><function>posix_mkfifo</function></entry>
       <entry>&sm.uidcheck.dir;</entry>
      </row>
      <row>
       <entry><function>putenv</function></entry>
       <entry>
        遵循 ini 设置的 safe_mode_protected_env_vars 和 safe_mode_allowed_env_vars
        选项。请参考 <function>putenv</function> 函数的有关文档。
       </entry>
       <!-- TODO: document those directives in chapters/config.xml -->
      </row>
      <row>
       <entry><function>move_uploaded_file</function></entry>
       <entry>&sm.uidcheck; <!-- TODO: check this --></entry>
      </row>
       <!-- TODO: from here on, add warning to the function itself -->
       <row>
       <entry><function>chdir</function></entry>
       <entry>&sm.uidcheck.dir;</entry>
      </row>
      <row>
       <entry><function>dl</function></entry>
       <entry>&sm.disabled;</entry>
      </row>
      <row>
       <entry><link linkend="language.operators.execution">backtick operator</link></entry>
       <entry>&sm.disabled;</entry>
      </row>
      <row>
       <entry><function>shell_exec</function>（在功能上和 backticks 函数相同）</entry>
       <entry>&sm.disabled;</entry>
      </row>
      <row>
       <entry><function>exec</function></entry>
       <entry>
        只能在 <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>
        设置的目录下进行执行操作。基于某些原因，目前不能在可执行对象的路径中使用
        <literal>..</literal>。<function>escapeshellcmd</function> 将被作用于此函数的参数上。
       </entry>
      </row>
      <row>
       <entry><function>system</function></entry>
       <entry>
        只能在 <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>
        设置的目录下进行执行操作。基于某些原因，目前不能在可执行对象的路径中使用
        <literal>..</literal>。<function>escapeshellcmd</function> 将被作用于此函数的参数上。
       </entry>
      </row>
      <row>
       <entry><function>passthru</function></entry>
       <entry>
        只能在 <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>
        设置的目录下进行执行操作。基于某些原因，目前不能在可执行对象的路径中使用
        <literal>..</literal>。<function>escapeshellcmd</function> 将被作用于此函数的参数上。
       </entry>
      </row>
      <row>
       <entry><function>popen</function></entry>
       <entry>
        只能在 <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>
        设置的目录下进行执行操作。基于某些原因，目前不能在可执行对象的路径中使用
        <literal>..</literal>。<function>escapeshellcmd</function> 将被作用于此函数的参数上。
       </entry>
       <!-- TODO: not sure. popen uses a completely different implementation
       Don't know why, don't know whether it's behaving the same -->
      </row>
      <row>
       <entry><function>fopen</function></entry>
       <entry>&sm.uidcheck.dir;</entry>
      </row>
      <row>
       <entry><function>mkdir</function></entry>
       <entry>&sm.uidcheck.dir;</entry>
      </row>
      <row>
       <entry><function>rmdir</function></entry>
       <entry>&sm.uidcheck.dir;</entry>
      </row>
      <row>
       <entry><function>rename</function></entry>
       <entry>&sm.uidcheck; &sm.uidcheck.dir;<!-- on the old name only, it seems. Is rename preventing moving files? --></entry>
      </row>
      <row>
       <entry><function>unlink</function></entry>
       <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
      </row>
      <row>
       <entry><function>copy</function></entry>
       <entry>&sm.uidcheck; &sm.uidcheck.dir; (on
       <parameter>source</parameter> and
       <parameter>target</parameter>) </entry>
      </row>
      <row>
       <entry><function>chgrp</function></entry>
       <entry>&sm.uidcheck;</entry>
      </row>
      <row>
       <entry><function>chown</function></entry>
       <entry>&sm.uidcheck;</entry>
      </row>
      <row>
       <entry><function>chmod</function></entry>
       <entry>&sm.uidcheck; 另外，不能设置 SUID、SGID 和 sticky bits</entry>
      </row>
      <row>
       <entry><function>touch</function></entry>
       <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
      </row>
      <row>
       <entry><function>symlink</function></entry>
       <entry>&sm.uidcheck; &sm.uidcheck.dir; （注意：仅测试 target）</entry>
      </row>
      <row>
       <entry><function>link</function></entry>
       <entry>&sm.uidcheck; &sm.uidcheck.dir; （注意：仅测试 target）</entry>
      </row>
      <row>
       <entry><function>apache_request_headers</function></entry>
       <entry>在安全模式下，以“authorization”（区分大小写）开头的标头将不会被返回。
      </entry>
      </row>
      <row>
       <entry><function>header</function></entry>
       <entry>在安全模式下，如果设置了
       <literal>WWW-Authenticate</literal>，当前脚本的 uid
       将被添加到该标头的 <literal>realm</literal> 部分。</entry>
      </row>
      <row>
       <entry><link linkend="features.http-auth">PHP_AUTH 变量</link></entry>
       <entry>
         在安全模式下，变量 <varname>PHP_AUTH_USER</varname>、<varname>PHP_AUTH_PW</varname> 和 <varname>PHP_AUTH_TYPE</varname> 在 <varname>$_SERVER</varname> 中不可用。但无论如何，您仍然可以使用 <varname>REMOTE_USER</varname> 来获取用户名称（USER）。（注意：仅 PHP 4.3.0 以后有效）
       </entry>
      </row>
      <row>
       <entry>
        <function>highlight_file</function>,
        <function>show_source</function>
       </entry>
       <entry>
        &sm.uidcheck; &sm.uidcheck.dir; （注意，仅在 4.2.1 版本后有效）
       </entry>
      </row>
      <row>
       <entry>
        <function>parse_ini_file</function>
       </entry>
       <entry>
        &sm.uidcheck; &sm.uidcheck.dir; （注意，仅在 4.2.1 版本后有效）
       </entry>
       </row>
       <row>
        <entry>
         <function>set_time_limit</function>
        </entry>
        <entry>
         在&safemode;下不起作用。
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="ini.max-execution-time">max_execution_time</link>
       </entry>
       <entry>
        在&safemode;下不起作用。
       </entry>
      </row>
      <row>
       <entry>
        <function>mail</function>
       </entry>
       <entry>
        在安全模式下，第五个参数被屏蔽。（注意，仅自 PHP 4.2.3 起受影响）
       </entry>
      </row>
      <row>
        <entry>
         <function>session_start</function>
        </entry>
        <entry>
         The owner of a script must be the same as owner of a <link
         linkend="ini.session.save-path">session.save_path</link> directory if
         the default <literal>files</literal> <link
         linkend="ini.session.save-handler">session.save_handler</link> is
         used.
        </entry>
       </row>
       <row>
        <entry>
         All filesystem and stream functions.
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir; (see the <link
          linkend="ini.safe-mode-include-dir">safe_mode_include_dir</link>
         &php.ini; option.
        </entry>
       </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </sect1>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- Reviewed: yes Maintainer: dallas -->
<!-- EN-Revision: 324591 Maintainer: dallas Status: ready -->

<sect1 xml:id="control-structures.declare" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title><literal>declare</literal></title>
 <?phpdoc print-version-for="declare"?>
 <para>
  <literal>declare</literal> 结构用来设定一段代码的执行指令。<literal>declare</literal>
  的语法和其它流程控制结构相似：
  <informalexample>
   <programlisting>
<![CDATA[
declare (directive)
    statement
]]>
   </programlisting>
  </informalexample>
 </para>
 <para>
  <literal>directive</literal> 部分允许设定 <literal>declare</literal>
  代码段的行为。目前只认识两个指令：<literal>ticks</literal>（更多信息见下面
  <link linkend="control-structures.declare.ticks">ticks</link> 指令）以及 
  <literal>encoding</literal>（更多信息见下面 <link 
  linkend="control-structures.declare.encoding">encoding</link> 指令）。
 </para>
 <note>
  <simpara>
   encoding 是 PHP 5.3.0 新增指令。
  </simpara>
 </note> 
 <para>
  <literal>declare</literal> 代码段中的 <literal>statement</literal>
  部分将被执行——怎样执行以及执行中有什么副作用出现取决于
  <literal>directive</literal> 中设定的指令。
 </para>
 <para>
  <literal>declare</literal> 结构也可用于全局范围，影响到其后的所有代码（但如果有
  <literal>declare</literal> 结构的文件被其它文件包含，则对包含它的父文件不起作用）。
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
// these are the same:

// you can use this:
declare(ticks=1) {
    // entire script here
}

// or you can use this:
declare(ticks=1);
// entire script here
?>
]]>
   </programlisting>
  </informalexample>
 </para>
 
 <sect2 xml:id="control-structures.declare.ticks">
  <title>Ticks</title>
  <para>
   Tick（时钟周期）是一个在 <literal>declare</literal> 代码段中解释器每执行
   <varname>N</varname> 条可计时的低级语句就会发生的事件。<varname>N</varname>
   的值是在 <literal>declare</literal> 中的 <literal>directive</literal> 部分用
   <code>ticks=<varname>N</varname></code> 来指定的。
  </para>
  <para>
   不是所有语句都可计时。通常条件表达式和参数表达式都不可计时。
  </para>
  <para>
   在每个 tick 中出现的事件是由 <function>register_tick_function</function>
   来指定的。更多细节见下面的例子。注意每个 tick 中可以出现多个事件。
  </para>
  <para>
   <example>
    <title>Tick 的用法示例</title>
    <programlisting role="php">
<![CDATA[
<?php

declare(ticks=1);

// A function called on each tick event
function tick_handler()
{
    echo "tick_handler() called\n";
}

register_tick_function('tick_handler');

$a = 1;

if ($a > 0) {
    $a += 2;
    print($a);
}

?>
]]>
   </programlisting>
  </example>
  </para>
  <para>
   <example>
    <title>Ticks 的用法示例</title>
    <programlisting role="php">
<![CDATA[
<?php

function tick_handler()
{
  echo "tick_handler() called\n";
}

$a = 1;
tick_handler();

if ($a > 0) {
    $a += 2;
    tick_handler();
    print($a);
    tick_handler();
}
tick_handler();

?>
]]>
   </programlisting>
  </example>
  </para>
  <simpara>
   参见 <function>register_tick_function</function> 和
   <function>unregister_tick_function</function>。
  </simpara>
 </sect2>
 
 <sect2 xml:id="control-structures.declare.encoding">
  <title>Encoding</title>
  <para>
   可以用 encoding 指令来对每段脚本指定其编码方式。
   <example>
    <title>对脚本指定编码方式</title>
    <programlisting role="php">
<![CDATA[
<?php
declare(encoding='ISO-8859-1');
// code here
?>
]]>
   </programlisting>
   </example>
  </para>
  
  <caution>
   <simpara>
    当和命名空间结合起来时 declare 的唯一合法语法是
    <literal>declare(encoding='...');</literal>，其中 <literal>...</literal>
    是编码的值。而 <literal>declare(encoding='...') {}</literal>
    将在与命名空间结合时产生解析错误。
   </simpara>
  </caution>
  <para>
   在 PHP 5.3 中除非在编译时指定了
   <literal>--enable-zend-multibyte</literal>，否则 declare 中的 encoding 值会被忽略。
  </para>
  <para>
   注意除非用 <function>phpinfo</function>，否则 PHP
   不会显示出是否在编译时指定了 <literal>--enable-zend-multibyte</literal>。
  </para>
  <para>
   参见 <link linkend="ini.zend.script-encoding">zend.script_encoding</link>。
  </para>
  <!-- FIXME PHP_6 
   In PHP 6.0, the <literal>encoding</literal>
   directive will be used to inform the scanner what encoding the file is created in.  Legal
   values are encoding names such as <literal>UTF-8</literal>.
   -->
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Author$ -->
<!-- $Revision$-->
<!-- EN-Revision: 341438 Maintainer: Altair Status: ready -->
<sect1 xml:id="language.pseudo-types">
 <title>本文档中使用的伪类型与变量</title> 
 <para>
  伪类型（pseudo-types） 是 PHP 文档里用于指示参数可以使用的类型和值。
  请注意，它们不是 PHP 语言里原生类型。
  所以不能把伪类型用于自定义函数里的类型约束（typehint）。
 </para>

 <sect2 xml:id="language.types.mixed">
  <title>mixed</title>

  <para>
   <literal>mixed</literal> 说明一个参数可以接受多种不同的（但不一定是所有的）类型。
  </para>

  <para>
   例如 <function>gettype</function> 可以接受所有的 PHP 类型，<function>str_replace</function> 可以接受字符串和数组。
  </para>

 </sect2>

 <sect2 xml:id="language.types.number">
  <title>number</title>

  <para>
   <literal>number</literal> 说明一个参数可以是 <type>integer</type> 或者 <type>float</type>。
  </para>

 </sect2>

 <sect2 xml:id="language.types.callback">
  <title>callback</title>

  <para>
   本文档中在 PHP 5.4 引入 <type>callable</type> 类型之前使用
   了 <type>callback</type> 伪类型。二者含义完全相同。
  </para>

 </sect2>
 
 <sect2 xml:id="language.types.array-object">
  <title>array|object</title>

  <para>
   <literal>array|object</literal> 意思是参数既可以是 <type>array</type> 也可以是
    <type>object</type>。
  </para>

 </sect2>
 
 <sect2 xml:id="language.types.void">
  <title>void</title>

  <para>
   <literal>void</literal> 作为返回类型意味着函数的返回值是无用的。<literal>void</literal>
   作为参数列表意味着函数不接受任何参数。
  </para>

 </sect2>

 <sect2 xml:id="language.types.dotdotdot">
  <title>...</title>

  <para>
   在函数原型中，<parameter>$...</parameter> 表示<literal>等等</literal>的意思。当一个函数可以接受任意个参数时使用此变量名。
  </para>

 </sect2>
</sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: 326724 Maintainer: Haohappy Status: ready -->
 <sect1 xml:id="language.oop5.static" xmlns="http://docbook.org/ns/docbook">
  <title>Static（静态）关键字</title>

  <tip>
   <simpara>
    本页说明了用 <literal>static</literal> 关键字来定义静态方法和属性。<literal>static</literal>
    也可用于<link linkend="language.variables.scope.static">定义静态变量</link>以及<link
    linkend="language.oop5.late-static-bindings">后期静态绑定</link>。参见上述页面了解
    <literal>static</literal> 在其中的用法。
   </simpara>
  </tip>

  <para>   
   声明类属性或方法为静态，就可以不实例化类而直接访问。静态属性不能通过一个类已实例化的对象来访问（但静态方法可以）。
  </para>

  <para>
   为了兼容 PHP 4，如果没有指定<link
   linkend="language.oop5.visibility">访问控制</link>，属性和方法默认为公有。
  </para>

  <para>
   由于静态方法不需要通过对象即可调用，所以伪变量 <varname>$this</varname> 在静态方法中不可用。
  </para>
  
  <para>   
   静态属性不可以由对象通过 -&gt; 操作符来访问。
  </para>

  <para>
   用静态方式调用一个非静态方法会导致一个 <constant>E_STRICT</constant> 级别的错误。
  </para>

  <para>
   就像其它所有的 PHP
   静态变量一样，静态属性只能被初始化为文字或常量，不能使用表达式。所以可以把静态属性初始化为整数或数组，但不能初始化为另一个变量或函数返回值，也不能指向一个对象。
  </para>

  <para> 
   自 PHP 5.3.0 起，可以用一个变量来动态调用类。但该变量的值不能为关键字
   <literal>self</literal>，<literal>parent</literal> 或 <literal>static</literal>。
  </para>

  <example>
   <title>静态属性示例</title>
   <programlisting role="php">
<![CDATA[
<?php
class Foo
{
    public static $my_static = 'foo';

    public function staticValue() {
        return self::$my_static;
    }
}

class Bar extends Foo
{
    public function fooStatic() {
        return parent::$my_static;
    }
}


print Foo::$my_static . "\n";

$foo = new Foo();
print $foo->staticValue() . "\n";
print $foo->my_static . "\n";      // Undefined "Property" my_static 

print $foo::$my_static . "\n";
$classname = 'Foo';
print $classname::$my_static . "\n"; // As of PHP 5.3.0

print Bar::$my_static . "\n";
$bar = new Bar();
print $bar->fooStatic() . "\n";
?>
   </programlisting>
  </example>

  <example>
   <title>静态方法示例</title>
    <programlisting role="php">
<![CDATA[
<?php
class Foo {
    public static function aStaticMethod() {
        // ...
    }
}

Foo::aStaticMethod();
$classname = 'Foo';
$classname::aStaticMethod(); // 自 PHP 5.3.0 起
?> 
]]>
    </programlisting>
  </example>

 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334988 Maintainer: HonestQiao Status: ready -->
<refentry xml:id="function.array-filter" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_filter</refname>
    <refpurpose>
     用回调函数过滤数组中的单元
    </refpurpose>
   </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_filter</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flag</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
    <para>
     依次将 <parameter>array</parameter> 数组中的每个值传递到
     <parameter>callback</parameter> 函数。如果
     <parameter>callback</parameter> 函数返回 true，则
     <parameter>array</parameter>
     数组的当前值会被包含在返回的结果数组中。数组的键名保留不变。
    </para>
   </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>

    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       要循环的数组
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       使用的回调函数
      </para>
      <para>
        如果没有提供 <parameter>callback</parameter>
     函数，
     将删除 <parameter>array</parameter> 中所有等值为
     &false; 的条目。更多信息见<link
     linkend="language.types.boolean.casting">转换为布尔值</link>。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>flag</parameter></term>
     <listitem>
      <para>
       决定<parameter>callback</parameter>接收的参数形式:
       <itemizedlist>
        <listitem>
         <simpara><constant>ARRAY_FILTER_USE_KEY</constant> - <parameter>callback</parameter>接受键名作为的唯一参数</simpara>
        </listitem>
        <listitem>
         <simpara><constant>ARRAY_FILTER_USE_BOTH</constant> - <parameter>callback</parameter>同时接受键名和键值</simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回过滤后的数组。
  </para>
 </refsect1>


 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>5.6.0</entry>
      <entry>
       添加可选的参数 <parameter>flag</parameter>，以及常量
       <constant>ARRAY_FILTER_USE_KEY</constant> 和 
       <constant>ARRAY_FILTER_USE_BOTH</constant>。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>
 
<!--
 <refsect1 role="errors">
  &reftitle.errors;
  &errors.no.unusual.errors;
 </refsect1>
-->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_filter</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
function odd($var)
{
    // returns whether the input integer is odd
    return($var & 1);
}

function even($var)
{
    // returns whether the input integer is even
    return(!($var & 1));
}

$array1 = array("a"=>1, "b"=>2, "c"=>3, "d"=>4, "e"=>5);
$array2 = array(6, 7, 8, 9, 10, 11, 12);

echo "Odd :\n";
print_r(array_filter($array1, "odd"));
echo "Even:\n";
print_r(array_filter($array2, "even"));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Odd :
Array
(
    [a] => 1
    [c] => 3
    [e] => 5
)
Even:
Array
(
    [0] => 6
    [2] => 8
    [4] => 10
    [6] => 12
)
]]>
    </screen>
   </example>
   <example>
    <title>不使用 <parameter>callback</parameter> 时的<function>array_filter</function>
    </title>
    <programlisting role="php">
<![CDATA[
<?php

$entry = array(
             0 => 'foo',
             1 => false,
             2 => -1,
             3 => null,
             4 => ''
          );

print_r(array_filter($entry));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => foo
    [2] => -1
)
]]>
    </screen>
   </example>
   <example>
    <title>带 <parameter>flag</parameter> 标记的 <function>array_filter</function>
    </title>
    <programlisting role="php">
<![CDATA[
<?php

$arr = ['a' => 1, 'b' => 2, 'c' => 3, 'd' => 4];

var_dump(array_filter($arr, function($k) {
    return $k == 'b';
}, ARRAY_FILTER_USE_KEY));

var_dump(array_filter($arr, function($v, $k) {
    return $k == 'b' || $v == 4;
}, ARRAY_FILTER_USE_BOTH));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(1) {
  ["b"]=>
  int(2)
}
array(2) {
  ["b"]=>
  int(2)
  ["d"]=>
  int(4)
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
     用户不应在回调函数中修改数组本身。例如增加／删除单元或者对
     <function>array_filter</function> 正在作用的数组进行
     unset。如果数组改变了，此函数的行为将不可预测。
   </para>
  </caution>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_map</function></member>
    <member><function>array_reduce</function></member>
    <member><function>array_walk</function></member>
   </simplelist>
  </para>
 </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

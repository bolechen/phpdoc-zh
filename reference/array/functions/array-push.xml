<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 331477 Maintainer: zhoumengkang Status: ready -->
<refentry xml:id="function.array-push" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_push</refname>
  <refpurpose>
   将一个或多个单元压入数组的末尾（入栈）
  </refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
 <methodsynopsis>
  <type>int</type><methodname>array_push</methodname>
  <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value1</parameter></methodparam>
  <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
 </methodsynopsis>
 <para>
  <function>array_push</function> 将
  <parameter>array</parameter> 当成一个栈，并将传入的变量压入
  <parameter>array</parameter> 的末尾。<parameter>array</parameter>
  的长度将根据入栈变量的数目增加。和如下效果相同：
  <programlisting role="php">
<![CDATA[
<?php
$array[] = $var;
?>
]]>
     </programlisting>
     并对每个传入的值重复以上动作。
    </para>
    <note>
     <simpara>
      如果用 <function>array_push</function> 来给数组增加一个单元，还不如用
      <literal>$array[] = </literal>，因为这样没有调用函数的额外负担。
    </simpara>
    </note>
    <note>
     <simpara>
      如果第一个参数不是数组，<function>array_push</function>
      将发出一条警告。这和
    <literal>$var[]</literal> 的行为不同，后者会新建一个数组。
       </simpara>
    </note>
   </refsect1>
   <refsect1 role="parameters">
    &reftitle.parameters;
    <para>
     <variablelist>
      <varlistentry>
       <term><parameter>array</parameter></term>
       <listitem>
        <para>
         输入的数组。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>value1</parameter></term>
       <listitem>
        <para>
         要压入 <parameter>array</parameter> 末尾的第一个值。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </refsect1>
   <refsect1 role="returnvalues">
    &reftitle.returnvalues;
    <para>
     返回处理之后数组的元素个数。
    </para>
   </refsect1>
   <refsect1 role="examples">
    &reftitle.examples;
    <para>
     <example>
      <title><function>array_push</function> 例子</title>
      <programlisting role="php">
<![CDATA[
<?php
$stack = array("orange", "banana");
array_push($stack, "apple", "raspberry");
print_r($stack);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [0] => orange
    [1] => banana
    [2] => apple
    [3] => raspberry
)
]]>
    </screen>
   </example>
     </para>
   </refsect1>
   <refsect1 role="seealso">
    &reftitle.seealso;
    <para>
     <simplelist>
      <member><function>array_pop</function></member>
      <member><function>array_shift</function></member>
      <member><function>array_unshift</function></member>
     </simplelist>
    </para>
   </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 320072 Maintainer: anonymous #47025 Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="yaf-route-supervar.assemble" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
    <refnamediv>
        <refname>Yaf_Route_Supervar::assemble</refname>
        <refpurpose>组合url</refpurpose>
    </refnamediv>

    <refsect1 role="description">
        &reftitle.description;
        <methodsynopsis>
            <modifier>public</modifier> <type>string</type><methodname>Yaf_Route_Supervar::assemble</methodname>
            <methodparam><type>array</type><parameter>info</parameter></methodparam>
            <methodparam choice="opt"><type>array</type><parameter>query</parameter></methodparam>
        </methodsynopsis>
        <para>
            根据指定参数和自定义参数将supervar这个route组合成一个url
        </para>
    </refsect1>

    <refsect1 role="parameters">
        &reftitle.parameters;
        <variablelist>
            <varlistentry>
                <term><parameter>info</parameter></term>
                <listitem>
                    <para>
                        需要传入一个数组，数组中每个key可为:m、:c、:a，:m代表module，:c代表controller, :a代表action
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><parameter>query</parameter></term>
                <listitem>
                    <para>
                        用户自定义的query string，将根据此路由规则拼接在url中
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsect1>

    <refsect1 role="examples">
        &reftitle.examples;
        <example>
            <title><function>Yaf_Route_Supervar::assemble</function>example</title>
            <programlisting role="php">
                <![CDATA[
<?php

$router = new Yaf_Router();

$route  = new Yaf_Route_Supervar('r');

$router->addRoute("supervar", $route);

var_dump($router->getRoute('supervar')->assemble(
        array(
              ':a' => 'yafaction',
              'tkey' => 'tval',
              ':c' => 'yafcontroller',
              ':m' => 'yafmodule'
        ),
        array(
              'tkey1' => 'tval1',
              'tkey2' => 'tval2'
        )
));

try {
var_dump($router->getRoute('supervar')->assemble(
        array(
              ':a' => 'yafaction',
              'tkey' => 'tval',
              ':m' => 'yafmodule'
        ),
        array(
              'tkey1' => 'tval1',
              'tkey2' => 'tval2',
              1 => array(),
        )
));
} catch (Exception $e) {
    var_dump($e->getMessage());
}
]]>
            </programlisting>
            &example.outputs.similar;
            <screen>
                <![CDATA[
string(%d) "?r=/yafmodule/yafcontroller/yafaction&tkey1=tval1&tkey2=tval2"
string(%d) "You need to specify the controller by ':c'"
]]>
            </screen>
        </example>
    </refsect1>

    <refsect1 role="returnvalues">
        &reftitle.returnvalues;
        <para>

        </para>
    </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

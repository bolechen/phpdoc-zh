<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: daijie Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.mb-convert-variables" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mb_convert_variables</refname>
  <refpurpose>转换一个或多个变量的字符编码</refpurpose>
 </refnamediv>
   
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>mb_convert_variables</methodname>
   <methodparam><type>string</type><parameter>to_encoding</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>from_encoding</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">vars</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter role="reference">...</parameter></methodparam>
  </methodsynopsis>
  <para>
   将变量 <parameter>vars</parameter> 的编码从 <parameter>from_encoding</parameter> 转换成编码 <parameter>to_encoding</parameter>。
  </para>
  <para>
   <function>mb_convert_variables</function> 会拼接变量数组或对象中的字符串来检测编码，因为短字符串的检测往往会失败。因此，不能在一个数组或对象中混合使用编码。
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>to_encoding</parameter></term>
     <listitem>
      <para>
       将 <type>string</type> 转换成这个编码。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>from_encoding</parameter></term>
     <listitem>
      <para>
       <parameter>from_encoding</parameter> 可以指定为一个 <type>array</type> 或者逗号分隔的 <type>string</type>，它将尝试根据 <parameter>from-coding</parameter> 来检测编码。
       当省略了 <parameter>from_encoding</parameter>，将使用 <literal>detect_order</literal>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>vars</parameter></term>
     <listitem>
      <para>
       <parameter>vars</parameter> 是要转换的变量的引用。
       参数可以接受 String、Array 和 Object 的类型。
       <function>mb_convert_variables</function> 假设所有的参数都具有同样的编码。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
       额外的 <parameter>vars</parameter>。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功时返回转换前的字符编码，失败时返回 &false;。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mb_convert_variables</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
/* 转换变量 $post1、$post2 编码为内部（internal）编码 */
$interenc = mb_internal_encoding();
$inputenc = mb_convert_variables($interenc, "ASCII,UTF-8,SJIS-win", $post1, $post2);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

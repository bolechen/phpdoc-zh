<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330300 Maintainer: daijie Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocollection.remove" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::remove</refname>
  <refpurpose>从集合中删除记录</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool|array</type><methodname>MongoCollection::remove</methodname>
   <methodparam choice="opt"><type>array</type><parameter>criteria</parameter><initializer>array()</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;    
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>criteria</parameter>
     </term>
     <listitem>
      <para>
       待删除记录的描述。
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       删除的选项。
       <itemizedlist>
        &mongo.writes.parameters.writeconcern;
        <listitem>
         <para>
          <literal>"justOne"</literal>
         </para>
         <para>
          最多只删除一个匹配的记录。
         </para>
        </listitem>
        &mongo.writes.parameters.fsync;
                &mongo.writes.parameters.journal;
<!--
        &mongo.writes.parameters.sockettimeoutms;
-->
        &mongo.writes.parameters.writeconcern;
        &mongo.writes.parameters.writeconcerntimeout;
        &mongo.writes.parameters.safe;
        &mongo.writes.parameters.timeout;
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   如果设置了 <literal>"w"</literal>  选项，将会返回包含删除状态的 array。
   否则返回 &true;。
  </para>
  <para>
   状态数组字段的解释位于 <function>MongoCollection::insert</function> 的文档。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &mongo.errors.exceptions.writeconcern;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
<!--
      <row>
       <entry>1.5.0</entry>
       <entry>Renamed the <literal>"timeout"</literal> option to
       <literal>"socketTimeoutMS"</literal>.</entry>
      </row>
-->
      <row>
       <entry>1.3.0</entry>
       <entry>
        <parameter>options</parameter> 参数不再接受 boolean 值来代表 <literal>"justOne"</literal>。
        现在，必须使用 <literal>array('justOne' => true)</literal> 作为替代。
       </entry>
      </row>
      <row>
       <entry>1.2.11</entry>
       <entry>
        当 <parameter>options</parameter> 是 <type>scalar</type> 时产生一个 <constant>E_DEPRECATED</constant> 警告。
       </entry>
      </row>
      <row>
       <entry>1.2.0</entry>
       <entry>添加 <literal>"timeout"</literal> 选项。</entry>
      </row>
      <row>
       <entry>1.0.11</entry>
       <entry>
        在设置了 <literal>"safe"</literal> 之后，将在出现 "not master" 错误时断开连接。
       </entry>
      </row>
      <row>
       <entry>1.0.9</entry>
       <entry>
        <para>
         添加了 <literal>"safe"</literal> 选项对 integer 的支持，之前只接受 boolean 值。
        </para>
        <para>
         添加了 <literal>"fsync"</literal> 选项。
        </para>
        <para>
         当使用了 <literal>"safe"</literal> 选项时将会返回包含错误信息的数组。
         否则和之前一样返回一个 boolean。
        </para>
       </entry>
      </row>
      <row>
       <entry>1.0.5</entry>
       <entry>
        修改第二个参数为选项的 array。在 1.0.5 之前，第二个选项是 boolean 值，
        代表了 <literal>"safe"</literal> 选项。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>MongoCollection::remove</function> 的 justOne 例子</title>
   <programlisting role="php">
<![CDATA[
<?php

$radioactive = $db->radioactive;

// 统计那有多少个钚
$remaining = $radioactive->count(array('type' => 94));

$halflife = $remaining/2;

// 删除一半
while ($halflife > 0) {
    $radioactive->remove(array('type' => 94), array("justOne" => true));
    $halflife--;
}

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>MongoCollection::insert</function></member>
   <member><function>MongoCollection::update</function></member>
   <member>MongoDB <link xlink:href="&url.mongodb.dochub.remove;">remove</link> 的核心文档。</member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 335238 Maintainer: daijie Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocollection.save" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::save</refname>
  <refpurpose>保存一个文档到集合</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>MongoCollection::save</methodname>
   <methodparam><type>array|object</type><parameter>document</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <para>
   如果对象来自数据库，则更新现有的数据库对象，否则插入对象。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;    
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>document</parameter>
     </term>
     <listitem>
      <para>
       要保存的 Array 或 Object。
       如果用的是 Object，它不能有 protected
       或 private 的属性。
      </para>
      <note>
       <para>
        如果参数不具有 <literal>_id</literal> 的键或者属性，将会创建并赋值一个新的
        <classname>MongoId</classname> 实例。
        关于此行为的更多信息，参见 <function>MongoCollection::insert</function>。
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       此次保存的选项。
       <itemizedlist>
        &mongo.writes.parameters.fsync;
        &mongo.writes.parameters.journal;
        &mongo.writes.parameters.sockettimeoutms;
        &mongo.writes.parameters.writeconcern;
        &mongo.writes.parameters.writeconcerntimeout;
        &mongo.writes.parameters.writeconcerntimeoutms;
        &mongo.writes.parameters.safe;
        &mongo.writes.parameters.timeout;
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   如果设置了 <parameter>w</parameter>，返回包含此次保存状态的一个 array。
   否则，返回一个 boolean，表示数组是否为空（空数组不会被插入）。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   如果插入的文档时空的，或者包含零长度的键，将抛出 <classname>MongoException</classname>。
   尝试插入包含 protected 和 private 属性的对象将导致零长度键的错误。
  </para>
  &mongo.errors.exceptions.writeconcern;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>   
      <row>
       <entry>1.5.0</entry>
       <entry>
        <para>
         增加 <literal>"wTimeoutMS"</literal> 选项来代替 
         <literal>"wtimeout"</literal>。
         使用 <literal>"wtimeout"</literal> 时出现 <constant>E_DEPRECATED</constant> 错误。
        </para>
        <para>
         新增 <literal>"socketTimeoutMS"</literal> 选项来代替 
         <literal>"timeout"</literal>。 使用 <literal>"timeout"</literal> 时出现  <constant>E_DEPRECATED</constant> 错误。
        </para>
        <para>
         使用  <literal>"safe"</literal> 时出现 <constant>E_DEPRECATED</constant> 错误。
        </para>
       </entry>
      </row>
      <row>
       <entry>1.2.0</entry>
       <entry>增加 <literal>"timeout"</literal> 选项。</entry>
      </row>
      <row>
       <entry>1.0.11</entry>
       <entry>
        设置 <literal>"safe"</literal> 时，当出现 "not master" 错误时主动断开连接。
       </entry>
      </row>
      <row>
       <entry>1.0.9</entry>
       <entry>
        <para>
         增加 <literal>"fsync"</literal> 选项。
        </para>
       </entry>
      </row>
      <row>
       <entry>1.0.5</entry>
       <entry>增加 <parameter>options</parameter> 参数。</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>MongoCollection::save</function> 例子</title>
   <programlisting role="php">
<![CDATA[
<?php

$obj = array('x' => 1);

// 插入 $obj 到 db
$collection->save($obj);
var_dump($obj);

// 增加额外的字段
$obj['foo'] = 'bar';

// $obj 不能被再次插入，导致 duplicate _id 错误
$collection->insert($obj);

// 保存、更新附带新字段的 $obj
$collection->save($obj);

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
array(2) {
  ["x"]=>
  int(1)
  ["_id"]=>
  object(MongoId)#4 (1) {
    ["$id"]=>
    string(24) "50b6afe544415ed606000000"
  }
}
]]>
   </screen>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 

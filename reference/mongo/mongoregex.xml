<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338645 Maintainer: daijie Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xml:id="class.mongoregex" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>MongoRegex 类</title>
 <titleabbrev>MongoRegex</titleabbrev>

 <partintro>

  <warning>
   &mongo.alternative.class.note;
   <simplelist role="alternatives">
    <member><classname>MongoDB\BSON\Regex</classname></member>
   </simplelist>
  </warning>

<!-- {{{ MongoRegex intro -->
  <section xml:id="mongoregex.intro">
   &reftitle.intro;
   <para>
    这个类用于创建一个正则表达式。
    通常这些表达式用于查询数据库中匹配的字符串。不常用的是，它们可以保存到数据库并用于检索。
   </para>
   <para>
    正则表达式由四部分组成。
    首先 <literal>/</literal> 作为起始的分隔符，然后是 pattern、另一个 <literal>/</literal> 
以及最后包含 flag 的字符串。
   </para>
   <para>
    <example>
     <title>正则表达式</title>
      <screen>
<![CDATA[
/pattern/flags
]]>
      </screen>
    </example>
   </para>
   <para>
    Mongo 能够识别六种正则表达式标记（flag）：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <literal>i</literal>：大小写不敏感
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>m</literal>：多行
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>x</literal>：能够包含注释
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>l</literal>：语言环境
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>s</literal>：dotall，"." 匹配任何字符，包括换行符。
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>u</literal>：匹配 Unicode
     </para>
    </listitem>
   </itemizedlist>
  </section>
<!-- }}} -->

  <section xml:id="mongoregex.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoRegex</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>MongoRegex</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">字段</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>string</type>
     <varname>regex</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>string</type>
     <varname>flags</varname>
    </fieldsynopsis>
    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.mongoregex')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

 </partintro>

 &reference.mongo.entities.mongoregex;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

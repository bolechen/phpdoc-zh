<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 341774 Maintainer: daijie Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongodb.authenticate" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoDB::authenticate</refname>
  <refpurpose>登录到数据库</refpurpose>
 </refnamediv>
 
 <refsynopsisdiv role="soft-deprecation-notice">
  <sidebar>
   &mongo.noalternative.method.note;
   <para>需要把认证信息放在连接字符串里作为代替。</para>
  </sidebar>
 </refsynopsisdiv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>MongoDB::authenticate</methodname>
   <methodparam><type>string</type><parameter>username</parameter></methodparam>
   <methodparam><type>string</type><parameter>password</parameter></methodparam>
  </methodsynopsis>
  <para>
   此方法能够认证它的连接。
   如果数据库服务器开启了认证（默认没有开启），在做任何操作之前你需要登录。
  </para>
  <para>
   通常情况下，你应该使用 <function>MongoClient::__construct</function> 内置的参数而不是此方法。
   如果你对一个连接验证了，然后在会话期间连接掉了然后重连，你会被重新验证。
   如果你用这个方法手动验证，然后连接掉了，你必须在重新连接时手动调用这个方法。
  </para>
  <para>
   该方法等同于运行：
   <programlisting role="php">
<![CDATA[
<?php

$salted = "${username}:mongo:${password}";
$hash = md5($salted);

$nonce = $db->command(array("getnonce" => 1));

$saltedHash = md5($nonce["nonce"]."${username}${hash}");

$result = $db->command(array("authenticate" => 1,
    "user" => $username,
    "nonce" => $nonce["nonce"],
    "key" => $saltedHash
));

?>
]]>
   </programlisting>
  </para>
  <para>
   当一个连接验证后，它仅能够通过 "logout" 数据库命令来登出：
   <programlisting role="php">
<![CDATA[
<?php

$db->command(array("logout" => 1));

?>
]]>
   </programlisting>
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>username</parameter>
     </term>
     <listitem>
      <para>
       用户名。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>password</parameter>
     </term>
     <listitem>
      <para>
       密码（明文格式）。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回数据库的响应，如果登录成功，它会返回
  <programlisting role="php">
<![CDATA[
<?php
array("ok" => 1);
?>
]]>
  </programlisting>
   如果出现了什么错误，它会返回
  <programlisting role="php">
<![CDATA[
<?php
array("ok" => 0, "errmsg" => "auth fails");
?>
]]>
  </programlisting>
  （"auth fails" 可能是另外的信息，取决于数据库版本和发生了什么错误）。
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   MongoDB 关于 <link xlink:href="&url.mongodb.docs.command;authenticate">authenticate</link> 的核心文档。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1.2.11</entry>
       <entry>
        使用时产生 <constant>E_DEPRECATED</constant>。
        请将验证细节传入到构造器。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 342433 Maintainer: yuanyuqiang Status: ready -->
<!-- Reviewed: no -->

<chapter xml:id="pthreads.modifiers" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>方法修饰符</title>
 <titleabbrev>Modifiers</titleabbrev>
 <warning>
   <para>
    仅适用于 pthreads v2。在 pthreads v3 中已经被移除。
   </para>
 </warning>
 <para>
  pthreads 将会改写标明为 protected 和 private 的方法来提供更加适合多线程环境的对象。
  对于所有的 Threaded 对象，pthreads 都会进行改写操作。
 </para>
 <example>
  <title>protected 方法示例： 标记为 protected 的方法在同一时间仅允许一个线程访问</title>
  <programlisting role="php">
<![CDATA[
<?php
class ExampleThread extends Thread {
    public function run() {
        /* thread code */
        if ($this->synchronized()) {

        }
    }

    protected function exclusive() {
        /* synchronized method */
    }
}

$thread = new ExampleThread();
if ($thread->start()) {
    $thread->exclusive();
}
?>
]]>
  </programlisting>
 </example>
 <example>
  <title>private 方法示例：标记为 private 的方法只能由创建该对象的线程调用</title>
  <programlisting role="php">
<![CDATA[
<?php
class ExampleThread extends Thread {
    public function run() {
        /* thread code */
        if ($this->insideonly()) {

        }
    }

    private function insideonly() {
        /* private method */
    }
}

$thread = new ExampleThread();
if ($thread->start()) {
    $thread->insideonly();
}
?>
]]>
  </programlisting>
 </example>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


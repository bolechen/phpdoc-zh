<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343898 Maintainer: duanxiaoqiang Status: ready -->
<!-- Reviewed: no -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.openssl-pkcs7-verify">
 <refnamediv>
  <refname>openssl_pkcs7_verify</refname>
  <refpurpose>校验一个已签名的 S/MIME 消息的签名</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>openssl_pkcs7_verify</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam><type>int</type><parameter>flags</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>outfilename</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>cainfo</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>extracerts</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>content</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>p7bfilename</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>openssl_pkcs7_verify</function> 读取给定文件中的 S/MIME 消息并且检查数字签名。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       消息的路径。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       <parameter>flags</parameter> 可以用来影响如何校验签名 - 参见 <link linkend="openssl.pkcs7.flags">PKCS7 常量</link>
       获取更多信息。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>outfilename</parameter></term>
     <listitem>
      <para>
       如果已指定 <parameter>outfilename</parameter> 输出文件，它应该是一个用以保存文件的字符串名称，签名消息的个人证书将以PEM的格式保存起来。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cainfo</parameter></term>
     <listitem>
      <para>
       如果 <parameter>cainfo</parameter> 被指定了，它应该保存关于受信任的CA证书的信息供在验证过程中使用 - 参见 <link linkend="openssl.cert.verification">证书校验</link> 获取关于该参数的更多信息。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>extracerts</parameter></term>
     <listitem>
      <para>
       如果 <parameter>extracerts</parameter> 被指定了，该文件包含了一堆会被作为不受信任的ca使用的证书。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>content</parameter></term>
     <listitem>
      <para>
       你可以使用 <parameter>content</parameter> 来指定带有已被验证数据的文件名，该文件内容已去掉了签名信息。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   如果签名已被认证，返回 &true;, 如果不正确(消息已被篡改或者签名证书不可用)则返回&false;,
   或者 - 错误时返回1.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
        添加 <parameter>content</parameter> 参数。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    正如 RFC 2045中指定的，<parameter>filename</parameter> 参数最多不可超过76个字符串。
   </simpara>
  </note>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

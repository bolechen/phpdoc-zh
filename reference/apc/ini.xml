<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 324522 Maintainer: HonestQiao Status: ready -->
<!-- Reviewed: no Maintainer: HonestQiao -->
<section xml:id="apc.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
 尽管默认的 APC 设定对于大多数安装已经没问题，但专业人员应考虑调整以下参数。
 </para>
 <para>
  APC有两个主要的配置选项。第一，多少内存将被分配给APC;第二，每次请求APC是否检查文件修改。两个ini选项分别控制这些设置 <literal>apc.shm_size</literal>
  和<literal>apc.stat</literal>.就这两项配置仔细阅读下面的章节。
 </para>
 <para>
  一旦服务器运行起来了,  <literal>apc.php</literal> 脚本可以拷贝到一个可以通过浏览器访问到的Web目录中，通过浏览器访问这个脚本会得到APC工作状态的详细分析，如果在PHP中启用了GD扩展，它甚至会显示一些有趣的图表。当然，首要的事情是要确保真的缓存了文件。  如果APC运行了， <literal>缓存完全统计
  </literal> 数目 (在左上角)将显示缓存的命中率并且清除在最后 <literal>apc.ttl</literal> 秒内没有被访问的缓存。 这个数字使缓存的最小化的很好配置。如果缓存不断的被填充和清除，这将影响缓存的效果和脚本的性能。减少这个数字的最好方式就是给APC分配足够多的内存。除此之外, 可以通过 <literal>apc.filters
  </literal>缓存更少的脚本。
 </para>
 <para>
  <table>
   <title>APC配置选项</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><link linkend="ini.apc.enabled">apc.enabled</link></entry>
      <entry>"1"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>PHP_INI_SYSTEM in APC 2. PHP_INI_ALL in APC &lt;= 3.0.12.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.shm-segments">apc.shm_segments</link></entry>
      <entry>"1"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.shm-size">apc.shm_size</link></entry>
      <entry>"30"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.optimization">apc.optimization</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>PHP_INI_SYSTEM in APC 2. Removed in APC 3.0.13.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.num-files-hint">apc.num_files_hint</link></entry>
      <entry>"1000"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.user-entries-hint">apc.user_entries_hint</link></entry>
      <entry>"4096"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.ttl">apc.ttl</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.user-ttl">apc.user_ttl</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.gc-ttl">apc.gc_ttl</link></entry>
      <entry>"3600"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.cache-by-default">apc.cache_by_default</link></entry>
      <entry>"1"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>PHP_INI_SYSTEM in APC &lt;= 3.0.12. Available since APC 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.filters">apc.filters</link></entry>
      <entry>NULL</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.mmap-file-mask">apc.mmap_file_mask</link></entry>
      <entry>NULL</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.slam-defense">apc.slam_defense</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.file-update-protection">apc.file_update_protection</link></entry>
      <entry>"2"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.6.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.enable-cli">apc.enable_cli</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.7.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.max-file-size">apc.max_file_size</link></entry>
      <entry>"1M"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.7.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.use-request-time">apc.use_request_time</link></entry>
      <entry>"1"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Available since APC 3.1.3.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.stat">apc.stat</link></entry>
      <entry>"1"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.10.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.write-lock">apc.write_lock</link></entry>
      <entry>"1"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.11.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.report-autofilter">apc.report_autofilter</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.11.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.include-once-override">apc.include_once_override</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.12.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.rfc1867">apc.rfc1867</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.13.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.rfc1867-prefix">apc.rfc1867_prefix</link></entry>
      <entry>"upload_"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.rfc1867-name">apc.rfc1867_name</link></entry>
      <entry>"APC_UPLOAD_PROGRESS"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.rfc1867-freq">apc.rfc1867_freq</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.rfc1867-ttl">apc.rfc1867_ttl</link></entry>
      <entry>"3600"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.1.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.localcache">apc.localcache</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.14.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.localcache.size">apc.localcache.size</link></entry>
      <entry>"512"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.14.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.coredump-unmap">apc.coredump_unmap</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.16.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.stat-ctime">apc.stat_ctime</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.0.13.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.preload-path">apc.preload_path</link></entry>
      <entry>NULL</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.1.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.file-md5">apc.file_md5</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.1.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.apc.canonicalize">apc.canonicalize</link></entry>
      <entry>"1"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.1.1.</entry>
     </row>
     <row>
      <entry>apc.lazy_functions</entry>
      <entry>0</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.1.3.</entry>
     </row>
     <row>
      <entry>apc.lazy_classes</entry>
      <entry>0</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Available since APC 3.1.3.</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>
 
 &ini.descriptions.title;
 
 <para>
  <variablelist>
   <varlistentry xml:id="ini.apc.enabled">
    <term>
     <parameter>apc.enabled</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      <literal>apc.enabled</literal> 可以设成 0 来禁用 APC.主要是用在当 APC 被静态编译入 PHP 时，因为没有其它方法来禁用了(编译为 DSO , 的时候，可以将<literal>php.ini</literal>中的<literal>extension</literal>
     行注释掉)。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.shm-segments">
    <term>
     <parameter>apc.shm_segments</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      编译器缓存要分配的共享内存块的数目。如果 APC 用光了共享内存但是已经将 <literal>apc.shm_size</literal> 
     设为了系统所能允许的最大值，可以尝试增大此值。 
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.shm-size">
    <term>
     <parameter>apc.shm_size</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
     以 MB 为单位的每个共享内存块的大小。默认时，有些系统（包括大多数 BSD 变种）的共享内存块大小非常低。 
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.optimization">
    <term>
     <parameter>apc.optimization</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
     优化级别。设为 0 则禁用优化器，更高的值则使用更主动的优化。期望非常有限的速度提升。尚在试验中。 
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.num-files-hint">
    <term>
     <parameter>apc.num_files_hint</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
     Web 服务器上的被包含或被请求的不同源文件的数目的大概估计。如果不确定则设为 0 或去掉此项；此设定主要用在有数千个源文件的站点。 
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.user-entries-hint">
    <term>
     <parameter>apc.user_entries_hint</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      与<link linkend="ini.apc.num-files-hint">apc.num_files_hint</link>类似,
      根据唯一用户数来存储缓存变量。 如果不能确定则设置为0或或去掉此项。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.ttl">
    <term>
     <parameter>apc.ttl</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      缓存条目在缓冲区中允许逗留的秒数。0 表示永不超时。建议值为7200~86400
      设为 0 意味着缓冲区有可能被旧的缓存条目填满，从而导致无法缓存新条目。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.user-ttl">
    <term>
     <parameter>apc.user_ttl</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
       类似于apc.ttl，只是针对每个用户而言，建议值为7200~86400。
       设为 0 意味着缓冲区有可能被旧的缓存条目填满，从而导致无法缓存新条目。
       如果大于0，APC将尝试删除过期条目。

     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.gc-ttl">
    <term>
     <parameter>apc.gc_ttl</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      缓存条目在垃圾回收表中能够存在的秒数。此值提供了一个安全措施，即在服务器进程在执行缓存的源文件时，如果该文件被修改则旧版本将不会被回收，直到达到此 TTL 为止。设为零将禁用此特性。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.cache-by-default">
    <term>
     <parameter>apc.cache_by_default</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      默认为 on，但可以设为 off 并和加号开头的 <literal>apc.filters</literal> 一起用，则文件仅在匹配过滤器时被缓存。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.filters">
    <term>
     <parameter>apc.filters</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      一个以逗号分隔的 POSIX 扩展正则表达式的列表。如果任一个模式匹配源文件名，则该文件不被缓存。注意用来匹配的文件名是传递给 include/require 的文件名，而不是绝对路径。如果正则表达式的第一个字符是<literal>+</literal> t则意味着任何匹配表达式的文件会被缓存，如果第一个字符是 <literal>-</literal> 则任何匹配项都不会被缓存。 <literal>-</literal>是默认值，可以省略掉。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.mmap-file-mask">
    <term>
     <parameter>apc.mmap_file_mask</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      如果使用 <literal>--enable-mmap</literal>(默认启用)为APC编译了MMAP支持，
      这里的值就是传递给mmap模块的mktemp风格的文件掩码(建议值为" <literal>/tmp/apc.XXXXXX</literal>")。
      该掩码用于决定内存映射区域是否要被file-backed或者shared memory backed。
      对于直接的file-backed内存映射，要设置成"/tmp/apc.XXXXXX"的样子(恰好6个X)。
      要使用POSIX风格的shm_open/mmap就需要设置成"/apc.shm.XXXXXX"的样子。
      你还可以设为"/dev/zero"来为匿名映射的内存使用内核的"/dev/zero"接口。
      不定义此指令则表示强制使用匿名映射。

     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.slam-defense">
    <term>
     <parameter>apc.slam_defense</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      在非常繁忙的服务器上，无论是启动服务还是修改文件，
      都可能由于多个进程企图同时缓存一个文件而导致竞争条件。
      这个选项用于设置进程在处理未被缓存的文件时跳过缓存步骤的百分率。
      比如设为<literal>75</literal>表示在遇到未被缓存的文件时有<literal>75</literal>%的概率不进行缓存，从而减少碰撞几率。
      反对使用该指令，鼓励设为 <literal>0</literal>来禁用这个特性。建议该用apc.write_lock指令。

     </para>
     <para>
      Deprecated by <link linkend="ini.apc.write-lock">apc.write_lock</link>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.file-update-protection">
    <term>
     <parameter>apc.file_update_protection</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      当你在一个运行中的服务器上修改文件时，你应当执行原子操作。
      也就是先写进一个临时文件，然后将该文件重命名(<literal>mv</literal>)到最终的名字。
      文本编辑器以及 <command>cp</command>, <command>tar</command>  等程序却并不是这样操作的，从而导致有可能缓冲了残缺的文件。
      默认值 2 表示在访问文件时如果发现修改时间距离访问时间小于 2 秒则不做缓冲。
      那个不幸的访问者可能得到残缺的内容，但是这种坏影响却不会通过缓存扩大化。
      如果你能确保所有的更新操作都是原子操作，那么可以用 0 关闭此特性。
      如果你的系统由于大量的IO操作导致更新缓慢，你就需要增大此值。

     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.enable-cli">
    <term>
     <parameter>apc.enable_cli</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      是否为CLI版本启用APC功能，仅用于测试和调试目的才打开此选项。
      在正常情况下不是理想的创建、 填充和销毁 CLI 的每个请求上的 APC 缓存，但各种测试方案很有用，能够轻松地使 CLI 版本的 PHP APC
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.max-file-size">
    <term>
     <parameter>apc.max_file_size</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      Prevent files larger than this value from getting cached.  Defaults to
      1M. 
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.apc.stat">
    <term>
     <parameter>apc.stat</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
 
     是否启用脚本更新检查。
     改变这个指令值要非常小心。
     默认值 On 表示APC在每次请求脚本时都检查脚本是否被更新，
     如果被更新则自动重新编译和缓存编译后的内容。但这样做对性能有不利影响。
     如果设为 Off 则表示不进行检查，从而使性能得到大幅提高。
     但是为了使更新的内容生效，你必须重启Web服务器(译者注：如果采用cgi/fcgi类似的，需重启cgi/fcgi进程)。
     生产服务器上脚本文件很少更改, 可以通过禁用本选项获得显著的性能提升。
     </para>
     <para>
    这个指令对于include/require的文件同样有效。但是需要注意的是，
    如果你使用的是相对路径，APC就必须在每一次include/require时都进行检查以定位文件。
    而使用绝对路径则可以跳过检查，所以鼓励你使用绝对路径进行include/require操作。

     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry xml:id="ini.apc.write-lock">
    <term>
     <parameter>apc.write_lock</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      在繁忙的服务器上，Web服务器第一次被启动，或者很多文件在同一时间被修改，APC可能会多次编译同一个文件，写锁保证只有一个进程将尝试编译并缓存未缓存的脚本。其他进程试图使用该脚本将不使用opcode缓存，而不是锁定和等待缓存生成。
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry xml:id="ini.apc.report-autofilter">
    <term>
     <parameter>apc.report_autofilter</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      是否记录所有由于early/late binding原因而自动未被缓存的脚本。
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry xml:id="ini.apc.include-once-override">
    <term>
     <parameter>apc.include_once_override</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      优化<function>include_once</function>和<function>require_once</function>函数以避免执行额外的系统调用。
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry xml:id="ini.apc.rfc1867">
    <term>
     <parameter>apc.rfc1867</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      RFC1867 File Upload Progress hook handler is only available if APC 
      was compiled against PHP 5.2.0 or later. When enabled, any file uploads
      which includes a field called <literal>APC_UPLOAD_PROGRESS</literal>
      before the file field in an upload form will cause APC to automatically
      create an upload_<emphasis>key</emphasis> user cache entry where
      <emphasis>key</emphasis> is the value of the
      <literal>APC_UPLOAD_PROGRESS</literal> form entry.
     </para>
     <para>
      Note that the hidden field specified by
      <literal>APC_UPLOAD_PROGRESS</literal> must come before the file field,
      otherwise the upload progress will not work correctly.
     </para>
     <para>
      Note that the file upload tracking is not threadsafe at this point, so
      new uploads that happen while a previous one is still going will disable
      the tracking for the previous.
     </para>
     <para>
      <example>
       <title>An apc.rfc1867 example</title>
       <programlisting role="php">
<![CDATA[
<?php
print_r(apc_fetch("upload_$_POST[APC_UPLOAD_PROGRESS]"));
?>
]]>
       </programlisting>
       &example.outputs.similar;
       <screen>
<![CDATA[
Array
(
    [total] => 1142543
    [current] => 1142543
    [rate] => 1828068.8
    [filename] => test
    [name] => file
    [temp_filename] => /tmp/php8F
    [cancel_upload] => 0
    [done] => 1
)
]]>
       </screen>
      </example>
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry xml:id="ini.apc.rfc1867-prefix">
    <term>
     <parameter>apc.rfc1867_prefix</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      用于上传文件的缓冲项条目名称前缀
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.apc.rfc1867-name">
    <term>
     <parameter>apc.rfc1867_name</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      需要由APC处理的上传文件的隐藏表单项名称
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.apc.rfc1867-freq">
    <term>
     <parameter>apc.rfc1867_freq</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      用户上传文件缓存项的更新频率。
      取值可以是总文件大小的百分比，或者以
      <literal>"k"</literal>, <literal>"m"</literal>, or <literal>"g"</literal>
      kilobytes, megabytes, or gigabytes 结尾的绝对尺寸 (大小写不敏感).
       0 表示尽可能快的更新，不过这样可能会导致上传速度下降。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.apc.rfc1867-ttl">
    <term>
     <parameter>apc.rfc1867_ttl</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      <acronym>TTL</acronym> for rfc1867 entries.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.apc.localcache">
    <term>
     <parameter>apc.localcache</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      使用非锁定本地进程shadow-cache ，它可以减少了向缓冲区写入时锁之间的竞争。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.apc.localcache.size">
    <term>
     <parameter>apc.localcache.size</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      The size of the local process shadow-cache, should be set to a
      sufficiently large value, approximately half of
      <link linkend="ini.apc.num-files-hint">apc.num_files_hint</link>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.apc.coredump-unmap">
    <term>
     <parameter>apc.coredump_unmap</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
          启用APC的信号句柄，例如SIGSEGV信号，当信号写入核心文件。当这些信号被接收，APC将试图取消映射的共享内存段，从核心文件中排除它。此设置可以提高系统的稳定性,当接受到致命的信号或者采用APC的大型共享内存段配置方式。
     </para>
     <warning>
      <para>
       此功能是潜在的危险。如果发生致命错误取消映射一个共享内存段致命的信号句柄，
       可能会导致不可预知的结果。
      </para>
     </warning>
     <note>
      <para>
       虽然有些内核可能会提供了便利，忽略各类共享内存时生成核心转储文件，这些实现可能也忽略了重要的共享内存段，比如 Apache scoreboard。
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.apc.stat-ctime">
    <term>
     <parameter>apc.stat_ctime</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      验证ctime(创建时间)可以避免SVN或者rsync带来的问题，确保自上次统计inode没有改变。APC通常只检查mtime(修改时间)。

     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.apc.canonicalize">
    <term>
     <parameter>apc.canonicalize</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      如果设置为on，则在no-state 模式（不检查文件更新）时会将相对路径改为绝对路径。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.apc.preload-path">
    <term>
     <parameter>apc.preload_path</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.apc.use-request-time">
    <term>
     <parameter>apc.use_request_time</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Use the <acronym>SAPI</acronym> request start time for
      <acronym>TTL</acronym>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.apc.file-md5">
    <term>
     <parameter>apc.file_md5</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      记录文件的md5值
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.apc.lazy-functions">
    <term>
     <parameter>apc.lazy_functions</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      启用函数延迟加载
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.apc.lazy-classes">
    <term>
     <parameter>apc.lazy_classes</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      启用类延迟加载
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

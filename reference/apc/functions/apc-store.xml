<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 331388 Maintainer: daijie Status: ready -->
<refentry xml:id="function.apc-store" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>apc_store</refname>
  <refpurpose>
   Cache a variable in the data store
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>apc_store</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>ttl</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>array</type><methodname>apc_store</methodname>
   <methodparam><type>array</type><parameter>values</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>unused</parameter><initializer>NULL</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>ttl</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   缓存一个变量到APC中
  </para>
  <note>
   <simpara>
    与PHP中其他的机制不同，使用<function>apc_store</function> 存储的变量
    在不同的请求之间一直持久存在（直到从缓存系统中移除）。
   </simpara>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       存储缓存变量使用的名称.<parameter>key</parameter>是唯一的，所以
       两个值使用同一个 <parameter>key</parameter>，原来的将被新的值覆盖。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       The variable to store
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ttl</parameter></term>
     <listitem>
      <para>
       生存时间;在缓存中存储<parameter>var</parameter>共<parameter>ttl</parameter>秒,
       在<parameter>ttl</parameter>秒过去后,存储的变量将会从缓存中擦除(在下一次请求时),
       如果没有设置<parameter>ttl</parameter>(或者<parameter>ttl</parameter>是<literal>0</literal>),
       变量将一直存活到被手动移除为止,除此之外不在缓存中的可能原因是，
       缓存系统使用clear，或者restart等。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>values</parameter></term>
     <listitem>
      <para>
       Names in key, variables in value.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
   Second syntax returns array with error keys.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>apc_store</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
$bar = 'BAR';
apc_store('foo', $bar);
var_dump(apc_fetch('foo'));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(3) "BAR"
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>apc_add</function></member>
    <member><function>apc_fetch</function></member>
    <member><function>apc_delete</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

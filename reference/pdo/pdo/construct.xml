<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 315005 Maintainer: anonymous #27375 Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="pdo.construct" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::__construct</refname>
  <refpurpose>
    创建一个表示数据库连接的 PDO 实例
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <methodname>PDO::__construct</methodname>
   <methodparam><type>string</type><parameter>dsn</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>password</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>driver_options</parameter></methodparam>
  </constructorsynopsis>
  <para>
    创建一个表示连接到请求数据库的数据库连接 PDO 实例。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry><term>dsn</term>
     <listitem>
      <para>
       数据源名称或叫做 DSN，包含了请求连接到数据库的信息。
      </para>
      <para>
       通常，一个 DSN 由 PDO 驱动名、紧随其后的冒号、以及具体 PDO 驱动的连接语法组成。更深入的信息能从 <link linkend="pdo.drivers">PDO 具体驱动文档</link>找到。
      </para>
      <para>
       The <parameter>dsn</parameter> 参数支持三种不同的方式 创建一个数据库连接：
      </para>
      <para>
       <variablelist>
        <varlistentry><term>Driver invocation</term>
         <listitem>
          <para>
           <parameter>dsn</parameter> 包含完整的DSN。
          </para>
         </listitem>
        </varlistentry>
        <varlistentry><term>URI invocation</term>
         <listitem>
          <para>
           <parameter>dsn</parameter> consists of <userinput>uri:</userinput>
           followed by a URI that defines the location of a file containing
           the DSN string. The URI can specify a local file or a remote URL.
          </para>
          <para><userinput>uri:file:///path/to/dsnfile</userinput></para>
         </listitem>
        </varlistentry>
        <varlistentry><term>Aliasing</term>
         <listitem>
          <para>
           <parameter>dsn</parameter> consists of a name 
           <parameter>name</parameter> that maps to 
           <code>pdo.dsn.<parameter>name</parameter></code> in &php.ini;
           defining the DSN string.
          </para>
          <note>
           <para>
             别名必须得在 &php.ini; 中定义了，不能是在 &htaccess; 或 &httpd.conf; 中 。
           </para>
          </note>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry><term>username</term>
     <listitem>
      <para>
       DSN字符串中的用户名。对于某些PDO驱动，此参数为可选项。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry><term>password</term>
     <listitem>
      <para>
       DSN字符串中的密码。对于某些PDO驱动，此参数为可选项。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry><term>driver_options</term>
     <listitem>
      <para>
       一个具体驱动的连接选项的键=&gt;值数组。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功则返回一个PDO对象。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   如果试图连接到请求的数据库失败，则<function>PDO::__construct</function> 抛出一个 PDO异常（<classname>PDOException</classname>）  。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>Create a PDO instance via driver invocation</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Connect to an ODBC database using driver invocation */
$dsn = 'mysql:dbname=testdb;host=127.0.0.1';
$user = 'dbuser';
$password = 'dbpass';

try {
    $dbh = new PDO($dsn, $user, $password);
} catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
}

?>
]]>
    </programlisting>
   </example>
   <example><title>Create a PDO instance via URI invocation</title>
    <para>
     The following example assumes that the file
     <filename>/usr/local/dbconnect</filename> exists with file permissions
     that enable PHP to read the file. The file contains the PDO DSN to
     connect to a DB2 database through the PDO_ODBC driver:
    </para>
    <screen>
<![CDATA[
odbc:DSN=SAMPLE;UID=john;PWD=mypass
]]>
    </screen>
    <para>
     The PHP script can then create a database connection by simply
     passing the <literal>uri:</literal> parameter and pointing to
     the file URI:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Connect to an ODBC database using driver invocation */
$dsn = 'uri:file:///usr/local/dbconnect';
$user = '';
$password = '';

try {
    $dbh = new PDO($dsn, $user, $password);
} catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
}

?>
]]>
    </programlisting>
   </example>
   <example><title> 使用别名创建一个PDO实例 </title>
    <para>
     The following example assumes that &php.ini; contains the following
     entry to enable a connection to a MySQL database using only the
     alias <literal>mydb</literal>:
    </para>
    <programlisting role="ini">
[PDO]
pdo.dsn.mydb="mysql:dbname=testdb;host=localhost"
    </programlisting>
    <programlisting role="php">
<![CDATA[
<?php
/*  使用别名连接到一个ODBC数据库  */
$dsn = 'mydb';
$user = '';
$password = '';

try {
    $dbh = new PDO($dsn, $user, $password);
} catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 337261 Maintainer: daijie Status: ready -->
<refentry xml:id="pdo.prepare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::prepare</refname>
  <refpurpose>
    准备要执行的语句，并返回语句对象
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>PDOStatement</type><methodname>PDO::prepare</methodname>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>driver_options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>

  <para>
   为 <function>PDOStatement::execute</function> 方法准备待执行的 SQL 语句。
   SQL 语句可以包含零个或多个参数占位标记，格式是命名（:name）或问号（?）的形式，当它执行时将用真实数据取代。
   
   在同一个 SQL 语句里，命名形式和问号形式不能同时使用；只能选择其中一种参数形式。
   请用参数形式绑定用户输入的数据，不要直接字符串拼接到查询里。
  </para>
  <para>
   调用 <function>PDOStatement::execute</function> 时，每一个值的参数占位标记，名称必须唯一。
   除非启用模拟（emulation）模式，同一个语句里无法使用重名的参数。
  </para>
  <note>
   <para>
     参数占位符仅能字面上展示完整的数据。不能是字面的一部分，不能是关键词，不能是标识符，不能是其他任意的范围。
     举例说明：不能把多个值绑到单个参数里，然后在 SQL 语句里用 IN() 查询。
   </para>
  </note>
  <para>
    如果用不同参数，通过 <function>PDO::prepare</function> 和 <function>PDOStatement::execute</function> 多次调用同一个 SQL 语句，将提升应用的性能 —— 驱动可以让客户端/服务器缓存查询和元信息，还能阻止 SQL 注入攻击，不需要手动给参数加引号。
  </para>
  <para>
    如果内置驱动不支持参数，PDO 将模拟出参数的功能；如果驱动仅仅支持其中一种风格（命名参数和问号参数两种），也会自动重写到另外一种风格。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      <para>
        必须是对目标数据库服务器有效的 SQL 语句模板。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>driver_options</parameter></term>
     <listitem>
      <para>
        数组包含一个或多个 key=&gt;value 键值对，为返回的 PDOStatement 对象设置属性。
       常见用法是：设置 <literal>PDO::ATTR_CURSOR</literal> 为 <literal>PDO::CURSOR_SCROLL</literal>，将得到可滚动的光标。
       某些驱动有驱动级的选项，在 prepare 时就设置。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    如果数据库服务器完成准备了语句，
   <function>PDO::prepare</function> 返回
   <classname>PDOStatement</classname> 对象。
   
   如果数据库服务器无法准备语句，
   <function>PDO::prepare</function> 返回 &false; 或抛出
   <classname>PDOException</classname> (取决于 <link
   linkend="pdo.error-handling">错误处理器</link>)。
  </para>
  <note>
   <para>
     模拟模式下的 prepare 语句不会和数据库服务器交互，所以 <function>PDO::prepare</function> 不会检查语句。
   </para>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>用命名参数形式准备 SQL 语句参数</title>
    <programlisting role="php">
<![CDATA[
<?php
/* 传入数组的值，并执行准备好的语句 */
$sql = 'SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour = :colour';
$sth = $dbh->prepare($sql, array(PDO::ATTR_CURSOR => PDO::CURSOR_FWDONLY));
$sth->execute(array(':calories' => 150, ':colour' => 'red'));
$red = $sth->fetchAll();
$sth->execute(array(':calories' => 175, ':colour' => 'yellow'));
$yellow = $sth->fetchAll();
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>用问号形式准备 SQL 语句参数</title>
    <programlisting role="php">
<![CDATA[
<?php
/* 传入数组的值，并执行准备好的语句 */
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < ? AND colour = ?');
$sth->execute(array(150, 'red'));
$red = $sth->fetchAll();
$sth->execute(array(175, 'yellow'));
$yellow = $sth->fetchAll();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::exec</function></member>
    <member><function>PDO::query</function></member>
    <member><function>PDOStatement::execute</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

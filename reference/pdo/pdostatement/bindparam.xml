<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328095 Maintainer: ichenshy Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="pdostatement.bindparam" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::bindParam</refname>
  <refpurpose>
   绑定一个参数到指定的变量名
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>PDOStatement::bindParam</methodname>
   <methodparam><type>mixed</type><parameter>parameter</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">variable</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>data_type</parameter><initializer>PDO::PARAM_STR</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>driver_options</parameter></methodparam>
  </methodsynopsis>
  <para>
   绑定一个PHP变量到用作预处理的SQL语句中的对应命名占位符或问号占位符。 不同于 <function>PDOStatement::bindValue</function> ，此变量作为引用被绑定，并只在 <function>PDOStatement::execute</function> 被调用的时候才取其值。
  </para>
  <para>
   大多数参数是输入参数，即，参数以只读的方式用来建立查询。一些驱动支持调用存储过程并作为输出参数返回数据，一些支持作为输入/输出参数，既发送数据又接收更新后的数据。
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>parameter</parameter></term>
      <listitem>
       <para>
        参数标识符。对于使用命名占位符的预处理语句，应是类似 <varname>:name</varname> 形式的参数名。对于使用问号占位符的预处理语句，应是以1开始索引的参数位置。
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>variable</parameter></term>
      <listitem>
       <para>
        绑定到 SQL 语句参数的 PHP 变量名。
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>data_type</parameter></term>
      <listitem>
       <para>
        使用 PDO::PARAM_* 常量明确地指定参数的类型。要从一个存储过程中返回一个 INOUT 参数，需要为 <parameter>data_type</parameter> 参数使用按位或操作符去设置 PDO::PARAM_INPUT_OUTPUT 位。
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
      <listitem>
       <para>
        数据类型的长度。为表明参数是一个存储过程的  OUT 参数，必须明确地设置此长度。
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>driver_options</parameter></term>
     <listitem>
      <para>
         
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example><title>执行一条使用命名占位符的预处理语句</title>
   <programlisting role="php">
<![CDATA[
<?php
/* 通过绑定的 PHP 变量执行一条预处理语句  */
$calories = 150;
$colour = 'red';
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour = :colour');
$sth->bindParam(':calories', $calories, PDO::PARAM_INT);
$sth->bindParam(':colour', $colour, PDO::PARAM_STR, 12);
$sth->execute();
?>
]]>
   </programlisting>
  </example>

  <example><title> 执行一条使用问号占位符的预处理语句 </title>
   <programlisting role="php">
<![CDATA[
<?php
/*  通过绑定的 PHP 变量执行一条预处理语句 */
$calories = 150;
$colour = 'red';
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < ? AND colour = ?');
$sth->bindParam(1, $calories, PDO::PARAM_INT);
$sth->bindParam(2, $colour, PDO::PARAM_STR, 12);
$sth->execute();
?>
]]>
   </programlisting>
  </example>

<!--
  <example><title>Pass a NULL value into a prepared statement</title>
   <programlisting role="php">
<![CDATA[
<?php
/* Execute a prepared statement by binding PHP variables */
$calories = 150;
$colour = 'red';
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour = :colour');
$sth->bindParam(':calories', $calories, PDO::PARAM_INT);

/* Find fruit with a NULL value in the colour column */
$sth->bindParam(':colour', $colour, PDO::PARAM_NULL);

$sth->execute();
?>
]]>
   </programlisting>
  </example>
-->
  <example><title>使用 INOUT 参数调用一个存储过程</title>
   <programlisting role="php">
<![CDATA[
<?php
/* 使用 INOUT 参数调用一个存储过程 */
$colour = 'red';
$sth = $dbh->prepare('CALL puree_fruit(?)');
$sth->bindParam(1, $colour, PDO::PARAM_STR|PDO::PARAM_INPUT_OUTPUT, 12);
$sth->execute();
print("After pureeing fruit, the colour is: $colour");
?>
]]>
   </programlisting>
  </example>

 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::prepare</function></member>
    <member><function>PDOStatement::execute</function></member>
    <member><function>PDOStatement::bindValue</function></member>
   </simplelist>
  </para>

 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

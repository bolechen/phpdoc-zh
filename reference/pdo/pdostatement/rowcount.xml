<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322104 Maintainer: ichenshy Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="pdostatement.rowcount" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::rowCount</refname>
  <refpurpose>
   返回受上一个 SQL 语句影响的行数
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>PDOStatement::rowCount</methodname>
   <void/>
  </methodsynopsis>

  <para>
   <function>PDOStatement::rowCount</function> 返回上一个由对应的 <literal>PDOStatement</literal> 对象执行DELETE、 INSERT、或 UPDATE 语句受影响的行数。
  </para>
  <para>
  如果上一条由相关 <literal>PDOStatement</literal> 执行的 SQL 语句是一条 SELECT 语句，有些数据可能返回由此语句返回的行数。但这种方式不能保证对所有数据有效，且对于可移植的应用不应依赖于此方式。
  </para>
 </refsect1>
 
  <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回行数。
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>返回删除的行数</title>
    <para>
     <function>PDOStatement::rowCount</function> 返回受 DELETE、INSERT、 或 UPDATE 语句影响的行数。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/*  从 FRUIT 数据表中删除所有行 */
$del = $dbh->prepare('DELETE FROM fruit');
$del->execute();

/*  返回被删除的行数 */
print("Return number of rows that were deleted:\n");
$count = $del->rowCount();
print("Deleted $count rows.\n");
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Return number of rows that were deleted:
Deleted 9 rows.
]]>
    </screen>
   </example>
   <example>
    <title>计算由一个 SELECT 语句返回的行数</title>
    <para>
     对于大多数数据库，<function>PDOStatement::rowCount</function> 不能返回受一条 SELECT 语句影响的行数。替代的方法是，使用 <function>PDO::query</function> 来发出一条和原打算中的SELECT语句有相同条件表达式的 SELECT COUNT(*) 语句，然后用 <function>PDOStatement::fetchColumn</function> 来取得返回的行数。这样应用程序才能正确执行。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$sql = "SELECT COUNT(*) FROM fruit WHERE calories > 100";
if ($res = $conn->query($sql)) {

    /* 检查符合 SELECT 语句的行数 */
  if ($res->fetchColumn() > 0) {

        /* 发出一条真正的 SELECT 语句并操作返回的结果 */
         $sql = "SELECT name FROM fruit WHERE calories > 100";
       foreach ($conn->query($sql) as $row) {
           print "Name: " .  $row['NAME'] . "\n";
         }
    }
    /* 没有匹配的行 -- 执行其他 */
  else {
      print "No rows matched the query.";
    }
}

$res = null;
$conn = null;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
apple
banana
orange
pear
]]>
    </screen>
   </example>

  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDOStatement::columnCount</function></member>
    <member><function>PDOStatement::fetchColumn</function></member>
    <member><function>PDO::query</function></member>
   </simplelist>
  </para>

 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

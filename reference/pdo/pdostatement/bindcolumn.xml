<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322104 Maintainer: ichenshy Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="pdostatement.bindcolumn" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::bindColumn</refname>
  <refpurpose>
    绑定一列到一个 PHP 变量
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
    <type>bool</type><methodname>PDOStatement::bindColumn</methodname>
    <methodparam><type>mixed</type><parameter>column</parameter></methodparam>
    <methodparam><type>mixed</type><parameter role="reference">param</parameter></methodparam>
    <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
    <methodparam choice="opt"><type>int</type><parameter>maxlen</parameter></methodparam>
    <methodparam choice="opt"><type>mixed</type><parameter>driverdata</parameter></methodparam>
   </methodsynopsis>

  <para>
    安排一个特定的变量绑定到一个查询结果集中给定的列。每次调用 <function>PDOStatement::fetch</function> 或 <function>PDOStatement::fetchAll</function> 都将更新所有绑定到列的变量。
  </para>
  <note>
   <para>
   在语句执行前 PDO 有关列的信息并非总是可用，可移植的应用应在 <function>PDOStatement::execute</function> <emphasis>之后</emphasis> 调用此函数（方法）。
   </para>
   <para>
   但是，当使用 <emphasis>PgSQL 驱动</emphasis> 时，要想能绑定一个 LOB 列作为流，应用程序必须在调用 <function>PDOStatement::execute</function> <emphasis>之前</emphasis> 调用此方法，否则大对象 OID 作为一个整数返回。
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>column</parameter></term>
     <listitem>
      <para>
       结果集中的列号（从1开始索引）或列名。如果使用列名，注意名称应该与由驱动返回的列名大小写保持一致。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>param</parameter></term>
     <listitem>
      <para>
       将绑定到列的 PHP 变量名称
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       通过 PDO::PARAM_* 常量指定的参数的数据类型。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>maxlen</parameter></term>
     <listitem>
      <para>
       预分配提示。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>driverdata</parameter></term>
     <listitem>
      <para>
        驱动的可选参数。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>把结果集输出绑定到 PHP 变量</title>
    <para>
    绑定结果集中的列到PHP变量是一种使每行包含的数据在应用程序中立即可用的有效方法。下面的例子演示了 PDO 怎样用多种选项和缺省值绑定和检索列。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
function readData($dbh) {
  $sql = 'SELECT name, colour, calories FROM fruit';
  try {
    $stmt = $dbh->prepare($sql);
    $stmt->execute();

    /*  通过列号绑定  */
    $stmt->bindColumn(1, $name);
    $stmt->bindColumn(2, $colour);
    
    /*  通过列名绑定  */
    $stmt->bindColumn('calories', $cals);

    while ($row = $stmt->fetch(PDO::FETCH_BOUND)) {
      $data = $name . "\t" . $colour . "\t" . $cals . "\n";
      print $data;
    }
  }
  catch (PDOException $e) {
    print $e->getMessage();
  }
}
readData($dbh);
?>
  ]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
apple   red     150
banana  yellow  175
kiwi    green   75
orange  orange  150
mango   red     200
strawberry      red     25
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDOStatement::execute</function></member>
    <member><function>PDOStatement::fetch</function></member>
    <member><function>PDOStatement::fetchAll</function></member>
    <member><function>PDOStatement::fetchColumn</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

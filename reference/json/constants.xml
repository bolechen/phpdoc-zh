<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: 348752 Maintainer: daijie Status: ready -->
<appendix xml:id="json.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants;
 <para>
  以下常量表示了 <function>json_last_error</function> 函数，或
  <classname>JsonException</classname> 类中的
  <varname>code</varname> 变量所返回的错误类型。
 </para>
 <variablelist>
  <varlistentry xml:id="constant.json-error-none">
   <term>
    <constant>JSON_ERROR_NONE</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     没有错误发生。自 PHP 5.3.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-depth">
   <term>
    <constant>JSON_ERROR_DEPTH</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     到达了最大堆栈深度。自 PHP 5.3.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-state-mismatch">
   <term>
    <constant>JSON_ERROR_STATE_MISMATCH</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     出现了下溢（underflow）或者模式不匹配。自 PHP 5.3.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-ctrl-char">
   <term>
    <constant>JSON_ERROR_CTRL_CHAR</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     控制字符错误，可能是编码不对。自 PHP 5.3.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-syntax">
   <term>
    <constant>JSON_ERROR_SYNTAX</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     语法错误。自 PHP 5.3.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-utf8">
   <term>
    <constant>JSON_ERROR_UTF8</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     异常的 UTF-8 字符，也许是因为不正确的编码。自 PHP 5.3.3 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-recursion">
   <term>
    <constant>JSON_ERROR_RECURSION</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
      传递给 <function>json_encode</function> 函数的对象或数组包含了递归引用，导致无法被编码。如果打开了
      <constant>JSON_PARTIAL_OUTPUT_ON_ERROR</constant> 选项，则牵涉到递归引用的数据会转换成
      &null; 后返回。自 PHP 5.5.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-inf-or-nan">
   <term>
    <constant>JSON_ERROR_INF_OR_NAN</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     传递给 <function>json_encode</function> 函数的参数中包含了
     <link linkend="language.types.float.nan"><constant>NAN</constant></link>
     或 <link linkend="function.is-infinite"><constant>INF</constant></link>，导致编码出错。如果打开了
     <constant>JSON_PARTIAL_OUTPUT_ON_ERROR</constant> 选项，则牵涉到对应不可编码的数字，会转换成数字
     <literal>0</literal> 后返回。自 PHP 5.5.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="constant.json-error-unsupported-type">
   <term>
    <constant>JSON_ERROR_UNSUPPORTED_TYPE</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
      传递了不支持的数据类型给 <function>json_encode</function> 函数，比如 &resource;。如果打开了
      <constant>JSON_PARTIAL_OUTPUT_ON_ERROR</constant> 选项，则对于不支持的数据类型，会转换成
      &null; 后返回。自 PHP 5.5.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="constant.json-error-invalid-property-name">
   <term>
    <constant>JSON_ERROR_INVALID_PROPERTY_NAME</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     A key starting with \u0000 character was in the string passed to
     <function>json_decode</function> when decoding a JSON object into a PHP
     object.
     Available since PHP 7.0.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-error-utf16">
   <term>
    <constant>JSON_ERROR_UTF16</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     Single unpaired UTF-16 surrogate in unicode escape contained in the
     JSON string passed to <function>json_encode</function>.
     Available since PHP 7.0.0.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>

 <para>
  下面的常量可以和 <function>json_decode</function> 的 form 选项结合使用。
 </para>
 <variablelist>
  <varlistentry xml:id="constant.json-bigint-as-string">
   <term>
    <constant>JSON_BIGINT_AS_STRING</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     将大数字编码成原始字符原来的值。
     自 PHP 5.4.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-object-as-array">
   <term>
    <constant>JSON_OBJECT_AS_ARRAY</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     Decodes JSON objects as PHP array. This option can be added automatically
     by calling <function>json_decode</function> with the second parameter
     equal to &true;.
     Available since PHP 5.4.0.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 
 <para>
  下面的常量可以和 <function>json_encode</function> 的 form 选项结合使用。
  
 </para>
 <variablelist>
  <varlistentry xml:id="constant.json-hex-tag">
   <term>
    <constant>JSON_HEX_TAG</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     所有的 &lt; 和 &gt; 转换成 \u003C 和 \u003E。
     自 PHP 5.3.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-hex-amp">
   <term>
    <constant>JSON_HEX_AMP</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     所有的 &amp; 转换成 \u0026。
     自 PHP 5.3.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-hex-apos">
   <term>
    <constant>JSON_HEX_APOS</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     所有的 ' 转换成 \u0027。
     自 PHP 5.3.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-hex-quot">
   <term>
    <constant>JSON_HEX_QUOT</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     所有的 " 转换成 \u0022。
    自 PHP 5.3.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-force-object">
   <term>
    <constant>JSON_FORCE_OBJECT</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     使一个非关联数组输出一个类（Object）而非数组。
     在数组为空而接受者需要一个类（Object）的时候尤其有用。
     自 PHP 5.3.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-numeric-check">
   <term>
    <constant>JSON_NUMERIC_CHECK</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     将所有数字字符串编码成数字（numbers）。
     自 PHP 5.3.3 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="constant.json-pretty-print">
   <term>
    <constant>JSON_PRETTY_PRINT</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     用空白字符格式化返回的数据。
     自 PHP 5.4.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-unescaped-slashes">
   <term>
    <constant>JSON_UNESCAPED_SLASHES</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     不要编码 <literal>/</literal>。
     自 PHP 5.4.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-unescaped-unicode">
   <term>
    <constant>JSON_UNESCAPED_UNICODE</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     以字面编码多字节 Unicode 字符（默认是编码成 \uXXXX）。
     自 PHP 5.4.0 起生效。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-partial-output-on-error">
   <term>
    <constant>JSON_PARTIAL_OUTPUT_ON_ERROR</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     Substitute some unencodable values instead of failing.
     Available since PHP 5.5.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-preserve-zero-fraction">
   <term>
    <constant>JSON_PRESERVE_ZERO_FRACTION</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     Ensures that <type>float</type> values are always encoded as a float
     value.
     Available since PHP 5.6.6.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-unescaped-line-terminators">
   <term>
    <constant>JSON_UNESCAPED_LINE_TERMINATORS</constant>
      (&integer;)
   </term>
   <listitem>
    <simpara>
     The line terminators are kept unescaped when
     <constant>JSON_UNESCAPED_UNICODE</constant> is supplied. It uses the same
     behaviour as it was before PHP 7.1 without this constant.
     Available since PHP 7.1.0.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>


 <para>
  下面的常量可以和 <function>json_decode</function> 及 <function>json_encode</function> 的 form 选项结合使用。
 </para>
 <variablelist>
  <varlistentry xml:id="constant.json-invalid-utf8-ignore">
   <term>
    <constant>JSON_INVALID_UTF8_IGNORE</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Ignore invalid UTF-8 characters.
     Available as of PHP 7.2.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-invalid-utf8-substitute">
   <term>
    <constant>JSON_INVALID_UTF8_SUBSTITUTE</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Convert invalid UTF-8 characters to \0xfffd
     (Unicode Character 'REPLACEMENT CHARACTER')
     Available as of PHP 7.2.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.json-throw-on-error">
   <term>
    <constant>JSON_THROW_ON_ERROR</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Throws <classname>JsonException</classname> if an error occurs instead 
     of setting the global error state that is retrieved with
     <function>json_last_error</function> and <function>json_last_error_msg</function>. 
     <constant>JSON_PARTIAL_OUTPUT_ON_ERROR</constant> takes precedence over
     <constant>JSON_THROW_ON_ERROR</constant>.
     Available as of PHP 7.3.0.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


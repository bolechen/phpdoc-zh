<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: n/a Maintainer: dallas Status: ready -->
<refentry xml:id="function.split" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>split</refname>
  <refpurpose>用正则表达式将字符串分割到数组中</refpurpose>
 </refnamediv>
 <refsect1>
  <title>说明</title>
  <methodsynopsis>
   <type>array</type><methodname>split</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter></methodparam>
  </methodsynopsis>
  <tip>
   <para>
    <function>preg_split</function> 函数使用了
    Perl 兼容正则表达式语法，通常是比
    <function>split</function> 更快的替代方案。如果不需要正则表达式的威力，则使用
    <function>explode</function> 更快，这样就不会招致正则表达式引擎的浪费。
   </para>
  </tip>
  <para>
   本函数返回一个字符串数组，每个单元为
   <parameter>string</parameter> 经区分大小写的正则表达式
   <parameter>pattern</parameter> 作为边界分割出的子串。如果设定了
   <parameter>limit</parameter>，则返回的数组最多包含
   <parameter>limit</parameter> 个单元，而其中最后一个单元包含了
   <parameter>string</parameter> 中剩余的所有部分。如果出错，则
   <function>split</function> 返回 &false;。
  </para>
  <para>
   将 <filename>/etc/passwd</filename> 中的前四个字段分割出来：
  </para>
  <para>
   <example>
    <title><function>split</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
list($user, $pass, $uid, $gid, $extra) =
    split (":", $passwd_line, 5);
?>
]]>
    </programlisting>
   </example>
  </para>
  <simpara>
   如果字符串中有 <replaceable>n</replaceable> 个与
   <parameter>pattern</parameter> 匹配的项目，则返回的数组将包含
   <literal><replaceable>n</replaceable>+1</literal> 个单元。例如，如果没有找到
   <parameter>pattern</parameter>，则会返回一个只有一个单元的数组。当然，如果
   <parameter>string</parameter> 为空也是这样。
  </simpara>
  <para>
   解析可能用斜线，点，或横线分割的日期：
  </para>
  <para>
   <example>
    <title><function>split</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
// 分隔符可以是斜线，点，或横线
$date = "04/30/1973";
list($month, $day, $year) = split ('[/.-]', $date);
echo "Month: $month; Day: $day; Year: $year<br />\n";
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   想仿效 Perl 中类似的 <command>@chars =
   split('', $str)</command> 行为，请参考
   <function>preg_split</function> 或 <function>str_split</function> 函数中的例子。
  </para>
  <para>
   注意 <parameter>pattern</parameter>
   是一个正则表达式。如果想要用的分割字符是正则表达式中的特殊字符，要先将其转义。如果觉得
   <function>split</function>（或其它任何 regex 函数）行为古怪的话，请阅读包含在
   PHP 发行包中 <filename>regex/</filename> 子目录下的
   <filename>regex.7</filename> 文件。该文件是手册页面格式，可以用类似
   <command>man /usr/local/src/regex/regex.7</command> 的命令来阅读。
  </para>
  <para>
   参见 <function>preg_split</function>，<function>spliti</function>，<function>str_split</function>，<function>explode</function>，<function>implode</function>，<function>chunk_split</function>
   和 <function>wordwrap</function>。
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

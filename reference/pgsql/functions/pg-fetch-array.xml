<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: n/a Maintainer: dallas Status: ready -->
  <refentry xml:id="function.pg-fetch-array" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>pg_fetch_array</refname>
    <refpurpose>提取一行作为数组</refpurpose>
   </refnamediv>
   <refsect1>
    <title>说明</title>
     <methodsynopsis>
      <type>array</type><methodname>pg_fetch_array</methodname>
      <methodparam><type>resource</type><parameter>result</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>row</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>result_type</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_fetch_array</function>
     返回一个与所提取的行（元组/记录）相一致的数组。如果没有更多行可供提取，则返回
     &false;。
    </para>
    <para>
     <function>pg_fetch_array</function> 是 <function>pg_fetch_row</function>
     的扩展版本。在返回的数组中不仅以数字索引方式存放数据（字段编号），默认情况下还用字段名做索引存放数据（字段名）。
    </para>
    <para>
     <parameter>row</parameter> 是想要取得的行（记录）的编号。第一行为 0。
    </para>
    <para>
     <parameter>result_type</parameter> 是可选参数，控制着怎样初始化返回值。<parameter>result_type</parameter>
     是一个常量，可以有以下取值：<constant>PGSQL_ASSOC</constant>，<constant>PGSQL_NUM</constant>
     和 <constant>PGSQL_BOTH</constant>。取值为 <constant>PGSQL_ASSOC</constant> 时
     <function>pg_fetch_array</function> 返回用字段名作为键值索引的关联数组，取值为
     <constant>PGSQL_NUM</constant> 时用字段编号作为键值，取值为
     <constant>PGSQL_BOTH</constant> 时则同时用两者作为键值。默认值是 <constant>PGSQL_BOTH</constant>。
     <note>
      <para>
       <parameter>result_type</parameter> 是在 PHP 4.0 中才加入的参数。
      </para>
     </note>
    </para>
    <para>
     <function>pg_fetch_array</function> 并不明显比使用 <function>pg_fetch_row</function> 慢，而且在使用中提供了更大的方便。
    </para>
    <para>
     <example>
      <title><function>pg_fetch_array</function></title>
      <programlisting role="php">
<![CDATA[
<?php 

$conn = pg_pconnect("dbname=publisher");
if (!$conn) {
    echo "An error occured.\n";
    exit;
}

$result = pg_query($conn, "SELECT * FROM authors");
if (!$result) {
    echo "An error occured.\n";
    exit;
}

$arr = pg_fetch_array($result, 0, PGSQL_NUM);
echo $arr[0] . " <- array\n";

$arr = pg_fetch_array($result, 1, PGSQL_ASSOC);
echo $arr["author"] . " <- array\n";

?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      从 4.1.0 开始，<parameter>row</parameter> 成为可选参数。每次调用 <function>pg_fetch_array</function>，内部的行计数器都会加一。
     </para>
    </note>
    <para>
     参见 <function>pg_fetch_row</function> 和 <function>pg_fetch_object</function> 以及 <function>pg_fetch_result</function>。
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 300101 Maintainer: HonestQiao Status: ready -->
<!-- Reviewed: no Maintainer: HonestQiao -->
<refentry xml:id='function.pg-convert' xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>pg_convert</refname>
    <refpurpose>
     将关联的数组值转换为适合 SQL 语句的格式。
    </refpurpose>
   </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
     <methodsynopsis>
      <type>array</type><methodname>pg_convert</methodname>
      <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
      <methodparam><type>string</type><parameter>table_name</parameter></methodparam>
      <methodparam><type>array</type><parameter>assoc_array</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_convert</function> 检查 <literal>assoc_array</literal>
     中的值并将其转换为为适用于 SQL 语句的值。<function>pg_convert</function>
     的前提条件是现有的表 <literal>table_name</literal>
     中具有的列至少有 <literal>assoc_array</literal>
     中的单元那么多。<literal>table_name</literal>
     中的字段名以及字段值必须和 <literal>assoc_array</literal>
     中的键名及值匹配。如果成功则返回一个包括转换后的值的数组，否则返回 &false;。
    </para>
  <note>
   <para>
    If there are boolean fields in <parameter>table_name</parameter> don't 
    use the constant &true; in <parameter>assoc_array</parameter>. It will be
    converted to the string 'TRUE' which is no valid entry for boolean fields
    in PostgreSQL. Use one of t, true, 1, y, yes instead.
   </para>
  </note>
    &warn.experimental.func;
   </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       PostgreSQL database connection resource.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>table_name</parameter></term>
     <listitem>
      <para>
       Name of the table against which to convert types.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>assoc_array</parameter></term>
     <listitem>
      <para>
       Data to be converted.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Any number of <constant>PGSQL_CONV_IGNORE_DEFAULT</constant>, 
       <constant>PGSQL_CONV_FORCE_NULL</constant> or
       <constant>PGSQL_CONV_IGNORE_NOT_NULL</constant>, combined.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   An <type>array</type> of converted values, or &false; on error.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>pg_convert</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php 
  $dbconn = pg_connect('dbname=foo');
  
  $tmp = array(
      'author' => 'Joe Thackery',
      'year' => 2005,
      'title' => 'My Life, by Joe Thackery'
  );
  
  $vals = pg_convert($dbconn, 'authors', $tmp);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_meta_data</function></member>
   </simplelist>
  </para>
 </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

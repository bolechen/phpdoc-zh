<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: HonestQiao Status: ready -->
<!-- Reviewed: no Maintainer: HonestQiao -->
<refentry xml:id="function.pg-put-line" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>pg_put_line</refname>
    <refpurpose>向 PostgreSQL 后端发送以 NULL 结尾的字符串</refpurpose>
   </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
     <methodsynopsis>
      <type>bool</type><methodname>pg_put_line</methodname>
      <methodparam choice="opt"><type>resource</type><parameter>connection</parameter></methodparam>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_put_line</function> 向 PostgreSQL 后端服务器发送以 NULL 结尾的字符串。例如可以通过 PostgreSQL 的 <literal>COPY</literal> 操作来向表中高速插入数据。结尾的 NULL 字符会自动加入。
    </para>
    <para><literal>COPY</literal> is a high-speed data loading interface
   supported by PostgreSQL.  Data is passed in without being parsed, 
   and in a single transaction.
  </para>
  <para>
   An alternative to using raw <function>pg_put_line</function> commands
   is to use <function>pg_copy_from</function>.  This is a far simpler 
   interface.
  </para>
    <note>
     <para> 
      应用程序必须明确地在 <function>pg_end_copy</function> 之前最后一行发送两个字符 "\." 来向后端指明发送数据结束。
     </para>
    </note>
   <warning>
   <para>
    Use of the <function>pg_put_line</function> causes most large object
    operations, including <function>pg_lo_read</function> and
    <function>pg_lo_tell</function>, to subsequently fail. You can use
    <function>pg_copy_from</function> and <function>pg_copy_to</function>
    instead.
   </para>
  </warning>
   </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       PostgreSQL database connection resource.  When 
       <parameter>connection</parameter> is not present, the default connection 
       is used. The default connection is the last connection made by 
       <function>pg_connect</function> or <function>pg_pconnect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       A line of text to be sent directly to the PostgreSQL backend.  A <literal>NULL</literal>
       terminator is added automatically.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>pg_put_line</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php 
  $conn = pg_pconnect("dbname=foo");
  pg_query($conn, "create table bar (a int4, b char(16), d float8)");
  pg_query($conn, "copy bar from stdin");
  pg_put_line($conn, "3\thello world\t4.5\n");
  pg_put_line($conn, "4\tgoodbye world\t7.11\n");
  pg_put_line($conn, "\.\n");
  pg_end_copy($conn);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_end_copy</function></member>
   </simplelist>
  </para>
 </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

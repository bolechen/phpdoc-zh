<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 309200 Maintainer: HonestQiao Status: ready -->
<!-- Reviewed: no Maintainer: HonestQiao -->
<refentry xml:id="function.file-put-contents" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>file_put_contents</refname>
  <refpurpose>将一个字符串写入文件</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>file_put_contents</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>context</parameter></methodparam>
  </methodsynopsis>
  <para> 
   和依次调用 <function>fopen</function>，<function>fwrite</function>
   以及 <function>fclose</function> 功能一样。
  </para>
  <para>
   If <parameter>filename</parameter> does not exist, the file is created.
   Otherwise, the existing file is overwritten, unless the 
   <constant>FILE_APPEND</constant> flag is set.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       要被写入数据的文件名。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       要写入的数据。类型可以是 <type>string</type>，<type>array</type>
       或者是 <type>stream</type> 资源（如上面所说的那样）。
      </para>
      <para>
       如果 <parameter>data</parameter>
   指定为 stream 资源，这里 stream
   中所保存的缓存数据将被写入到指定文件中，这种用法就相似于使用
   <function>stream_copy_to_stream</function> 函数。
      </para>
      <para>
       参数 <parameter>data</parameter> 可以是数组（但不能为多维数组），这就相当于
   <literal>file_put_contents($filename, join('', $array))</literal>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       <parameter>flags</parameter> 的值可以是
       以下 flag 使用 OR (<literal>|</literal>) 运算符进行的组合。
      </para>
       <para>
       <table>
        <title>Available flags</title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Flag</entry>
           <entry>描述</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <constant>FILE_USE_INCLUDE_PATH</constant>
           </entry>
           <entry>
            在 include 目录里搜索  <parameter>filename</parameter>。
            更多信息可参见 <link linkend="ini.include-path">include_path</link>。
           </entry>
          </row>
          <row>
           <entry>
            <constant>FILE_APPEND</constant>
           </entry>
           <entry>
            如果文件 <parameter>filename</parameter>  已经存在，追加数据而不是覆盖。
           </entry>
          </row>
          <row>
           <entry>
            <constant>LOCK_EX</constant>
           </entry>
           <entry>
            在写入时获得一个独占锁。
           </entry>
          </row>
          <!-- FIXME PHP_6
          <row>
           <entry>
            <constant>FILE_TEXT</constant>
           </entry>
           <entry>
            <parameter>data</parameter> is written in text mode. If unicode 
            semantics are enabled, the default encoding is UTF-8.
            You can specify a different encoding by creating a custom context
            or by using the <function>stream_default_encoding</function> to
            change the default. This flag cannot be used with 
            <constant>FILE_BINARY</constant>. This flag is only available since
            PHP 6.
           </entry>
          </row>
          <row>
           <entry>
            <constant>FILE_BINARY</constant>
           </entry>
           <entry>
            <parameter>data</parameter> will be written in binary mode. This
            is the default setting and cannot be used with
            <constant>FILE_TEXT</constant>. This flag is only available since
            PHP 6.
           </entry>
          </row>
          -->
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       一个 context 资源。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   该函数将返回写入到文件内数据的字节数，失败时返回&false;
  </para>
  &return.falseproblem;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Simple usage example</title>
    <programlisting role="php">
<![CDATA[
<?php
$file = 'people.txt';
// Open the file to get existing content
$current = file_get_contents($file);
// Append a new person to the file
$current .= "John Smith\n";
// Write the contents back to the file
file_put_contents($file, $current);
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Using flags</title>
    <programlisting role="php">
<![CDATA[
<?php
$file = 'people.txt';
// The new person to add to the file
$person = "John Smith\n";
// Write the contents to the file, 
// using the FILE_APPEND flag to append the content to the end of the file
// and the LOCK_EX flag to prevent anyone else writing to the file at the same time
file_put_contents($file, $person, FILE_APPEND | LOCK_EX);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.0.0</entry>
       <entry>
        Added context support
       </entry>
      </row>
      <row>
       <entry>5.1.0</entry>
       <entry>
        添加了对 <constant>LOCK_EX</constant> 的支持和 <parameter>data</parameter>
        参数处理 stream 资源的功能。
       </entry>
      </row>
      <!--
      FIXME PHP_6
      <row>
       <entry>6.0.0</entry>
       <entry>
        Added support for the <constant>FILE_TEXT</constant> and
        <constant>FILE_BINARY</constant> flags
       </entry>
      </row>
      -->
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  &tip.fopen-wrapper;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fopen</function></member>
    <member><function>fwrite</function></member>
    <member><function>file_get_contents</function></member>
    <member><function>stream_context_create</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

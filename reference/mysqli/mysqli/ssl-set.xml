<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322005 Maintainer: yuanyuqiang Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mysqli.ssl-set" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::ssl_set</refname>
  <refname>mysqli_ssl_set</refname>
  <refpurpose>使用 SSL 建立到数据库之间的安全连接</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <type>bool</type><methodname>mysqli::ssl_set</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>string</type><parameter>cert</parameter></methodparam>
   <methodparam><type>string</type><parameter>ca</parameter></methodparam>
   <methodparam><type>string</type><parameter>capath</parameter></methodparam>
   <methodparam><type>string</type><parameter>cipher</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>bool</type><methodname>mysqli_ssl_set</methodname>
   <methodparam><type>mysqli</type><parameter>link</parameter></methodparam>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>string</type><parameter>cert</parameter></methodparam>
   <methodparam><type>string</type><parameter>ca</parameter></methodparam>
   <methodparam><type>string</type><parameter>capath</parameter></methodparam>
   <methodparam><type>string</type><parameter>cipher</parameter></methodparam>
  </methodsynopsis>
  <para>
   使用 SSL 建立到数据库之间的安全连接，
   必须在调用 <function>mysqli_real_connect</function> 函数之前调用此函数。
   除非启用 OpenSSL 支持，否则此函数无任何作用。
  </para>

  <para>
   需要注意的是，在 PHP 5.3.3 之前的版本中，
   MySQL 原生驱动不支持建立 SSL 连接，
   所以，在使用 MySQL 原生驱动的时候，调用此函数会产生错误。
   从 PHP 5.3 开始，在 Windows 平台上，默认是启用 MySQL 原生驱动的。
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       密钥文件的路径
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cert</parameter></term>
     <listitem>
      <para>
       证书文件的路径
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ca</parameter></term>
     <listitem>
      <para>
       签发机构的证书文件路径
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>capath</parameter></term>
     <listitem>
      <para>
       指向一个目录的路径，
       该目录下存放的是受信任的 CA 机构证书 PEM 格式的文件。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cipher</parameter></term>
     <listitem>
      <para>
       SSL 加密允许使用的算法清单
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   任何未使用的 SSL 参数，可以设置为 &null;。
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   此函数永远会返回 &true;。
   如果 SSL 的设置有误，那么在调用 <function>mysqli_real_connect</function>
   函数建立连接的时候才会报错。
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_options</function></member>
    <member><function>mysqli_real_connect</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322005 Maintainer: yuanyuqiang Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mysqli.prepare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::prepare</refname>
  <refname>mysqli_prepare</refname>
  <refpurpose>准备执行一个 SQL 语句</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <type>mysqli_stmt</type><methodname>mysqli::prepare</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>mysqli_stmt</type><methodname>mysqli_prepare</methodname>
   <methodparam><type>mysqli</type><parameter>link</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <para>
   做好执行 SQL 语句的准备，返回一个语句句柄，可以对这个句柄进行后续的操作。
   这里仅仅支持单一的 SQL 语句，不支持多 SQL 语句。
  </para>
  <para>
   在执行语句之前，需要使用 <function>mysqli_stmt_bind_param</function> 函数
   对占位符参数进行绑定。
   同样，在获取结果之前，必须使用
   <function>mysqli_stmt_bind_result</function> 函数对返回的列值进行绑定。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       SQL 语句。
      </para>
      <note>
       <para>
        不需要在语句末尾增加分号（;）
        或者 <literal>\g</literal> 结束符。
       </para>
      </note>
      <para>
       SQL 语句中可以包含一个或者多个问号（<literal>?</literal>）
       表示语句的参数。
       
      </para>
      <note>
       <para>
        SQL 语句中，仅允许在特定的位置出现问号参数占位符。
        例如，在 <literal>INSERT</literal> 语句中的 <literal>VALUES()</literal>
        子句中可以使用参数占位符，来表示对应列的值。
        也可以在 <literal>WHERE</literal> 字句中使用参数来表示
        要进行比较的值。
       </para>
       <para>
        但是，并不是所有的地方都允许使用参数占位符，
        例如对于表名、列名这样的 SQL 语句中的标识位置，
        就不可以使用参数占位。
        <literal>SELECT</literal> 语句中的列名就不可以使用参数。
        另外，对于 <literal>=</literal> 这样的逻辑比较操作也不可以在两侧都使用参数，
        否则服务器在解析 SQL 的时候就不知道该如何检测参数类型了。
        也不可以在 <literal>NULL</literal> 条件中使用问号，
        也就是说不可以写成：<literal>? IS NULL</literal>。
        一般而言，参数也只能用在数据操作（DML）语句中，
        不可以用在数据定义（DDL）语句中。
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>mysqli_prepare</function> 返回一个 statement 对象，如果发生错误则返回 &false;。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><methodname>mysqli::prepare</methodname> 例程</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

/* 检查连接 */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

$city = "Amersfoort";

/* 创建一个预编译 SQL 语句 */
if ($stmt = $mysqli->prepare("SELECT District FROM City WHERE Name=?")) {

    /* 对于参数占位符进行参数值绑定 */
    $stmt->bind_param("s", $city);

    /* 执行查询 */
    $stmt->execute();

    /* 将查询结果绑定到变量 */
    $stmt->bind_result($district);

    /* 获取查询结果值 */
    $stmt->fetch();

    printf("%s is in district %s\n", $city, $district);

    /* 关于语句对象 */
    $stmt->close();
}

/* 关闭连接 */
$mysqli->close();
?>
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

/* 检查连接 */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

$city = "Amersfoort";

/* 创建一个预编译 SQL 语句 */
if ($stmt = mysqli_prepare($link, "SELECT District FROM City WHERE Name=?")) {

    /* 对于参数占位符进行参数值绑定 */
    mysqli_stmt_bind_param($stmt, "s", $city);

    /* 执行查询 */
    mysqli_stmt_execute($stmt);

    /* 将查询结果绑定到变量 */
    mysqli_stmt_bind_result($stmt, $district);

    /* 获取查询结果值 */
    mysqli_stmt_fetch($stmt);

    printf("%s is in district %s\n", $city, $district);

    /* 关闭语句句柄 */
    mysqli_stmt_close($stmt);
}

/* 关闭连接 */
mysqli_close($link);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
Amersfoort is in district Utrecht
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_stmt_execute</function></member>
    <member><function>mysqli_stmt_fetch</function></member>
    <member><function>mysqli_stmt_bind_param</function></member>
    <member><function>mysqli_stmt_bind_result</function></member>
    <member><function>mysqli_stmt_close</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 310346 Maintainer: HonestQiao Status: ready -->
<!-- Reviewed: no Maintainer: HonestQiao -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.substr-replace">
 <refnamediv>
  <refname>substr_replace</refname>
  <refpurpose>替换字符串的子串</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>substr_replace</methodname>
   <methodparam><type>mixed</type><parameter>string</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>replacement</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>start</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>length</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>substr_replace</function> 在字符串 <parameter>string</parameter> 的副本中将由 <parameter>start</parameter> 和可选的 <parameter>length</parameter> 参数限定的子字符串使用 <parameter>replacement</parameter> 进行替换。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       输入字符串。
      </para>
      <para>
       An <type>array</type> of <type>string</type>s can be provided, in which
       case the replacements will occur on each string in turn. In this case,
       the <parameter>replacement</parameter>, <parameter>start</parameter>
       and <parameter>length</parameter> parameters may be provided either as
       scalar values to be applied to each input string in turn, or as
       <type>array</type>s, in which case the corresponding array element will
       be used for each input string.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replacement</parameter></term>
     <listitem>
      <para>
       替换字符串。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>start</parameter></term>
     <listitem>
      <para>
       如果 <parameter>start</parameter> 为正数，替换将从 <parameter>string</parameter> 的 <parameter>start</parameter> 位置开始。
      </para>
      <para>
       如果 <parameter>start</parameter> 为负数，替换将从 <parameter>string</parameter> 的倒数第 <parameter>start</parameter> 个位置开始。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       如果设定了这个参数并且为正数，表示 <parameter>string</parameter> 中被替换的子字符串的长度。如果设定为负数，它表示待替换的子字符串结尾处距离 <parameter>string</parameter> 末端的字符个数。如果没有提供此参数，那么它默认为 strlen( <parameter>string</parameter> ) （字符串的长度）。当然，如果 <parameter>length</parameter> 为 0，那么这个函数的功能为将 <parameter>replacement</parameter> 插入到 <parameter>string</parameter> 的 <parameter>start</parameter> 位置处。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回结果字符串。如果 <parameter>string</parameter> 是个数组，那么也将返回一个数组。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.3</entry>
       <entry>
        All parameters now accept <type>array</type>s.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>substr_replace</function> 范例</title>
    <programlisting role="php">
<![CDATA[
<?php
$var = 'ABCDEFGH:/MNRPQR/';
echo "Original: $var<hr />\n";

/* 这两个例子使用 “bob” 替换整个 $var。*/
echo substr_replace($var, 'bob', 0) . "<br />\n";
echo substr_replace($var, 'bob', 0, strlen($var)) . "<br />\n";

/* 将 “bob” 插入到 $var 的开头处。*/
echo substr_replace($var, 'bob', 0, 0) . "<br />\n";

/* 下面两个例子使用 “bob” 替换 $var 中的 “MNRPQR”。*/
echo substr_replace($var, 'bob', 10, -1) . "<br />\n";
echo substr_replace($var, 'bob', -7, -1) . "<br />\n";

/* 从 $var 中删除 “MNRPQR”。*/
echo substr_replace($var, '', 10, -1) . "<br />\n";
?>
]]>
    </programlisting>
  </example>
  </para>
  <para>
   <example>
    <title>
     Using <function>substr_replace</function> to replace multiple strings at
     once
    </title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array('A: XXX', 'B: XXX', 'C: XXX');

// A simple case: replace XXX in each string with YYY.
echo implode('; ', substr_replace($input, 'YYY', 3, 3))."\n";

// A more complicated case where each replacement is different.
$replace = array('AAA', 'BBB', 'CCC');
echo implode('; ', substr_replace($input, $replace, 3, 3))."\n";

// Replace a different number of characters each time.
$length = array(1, 2, 3);
echo implode('; ', substr_replace($input, $replace, 3, $length))."\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
A: YYY; B: YYY; C: YYY
A: AAA; B: BBB; C: CCC
A: AAAXX; B: BBBX; C: CCC
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_replace</function></member>
    <member><function>substr</function></member>
    <member><link linkend="language.types.string.substr">字符串访问与修改</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

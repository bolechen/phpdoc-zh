<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334762 Maintainer: daijie Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.strtr" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtr</refname>
  <refpurpose>转换指定字符</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>strtr</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam><type>string</type><parameter>from</parameter></methodparam>
   <methodparam><type>string</type><parameter>to</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>string</type><methodname>strtr</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam><type>array</type><parameter>replace_pairs</parameter></methodparam>
  </methodsynopsis>
  <para>
   该函数返回 <parameter>str</parameter> 的一个副本，并将在 <parameter>from</parameter> 中指定的字符转换为 <parameter>to</parameter> 中相应的字符。
   比如， <literal>$from[$n]</literal>中每次的出现都会被替换为
   <literal>$to[$n]</literal>，其中 <literal>$n</literal> 是两个参数都有效的位移(offset)。
  </para>
  <para>
   如果 <parameter>from</parameter> 与 <parameter>to</parameter> 长度不相等，那么多余的字符部分将被忽略。 <parameter>str</parameter> 的长度将会和返回的值一样。
  </para>
  <para>
   If given two arguments, the second should be an <type>array</type> in the
   form <literal>array('from' => 'to', ...)</literal>. The return value is
   a <type>string</type> where all the occurrences of the array keys have been
   replaced by the corresponding values. The longest keys will be tried first.
   Once a substring has been replaced, its new value will not be searched
   again.
  </para>
  <para>
   In this case, the keys and the values may have any length, provided that
   there is no empty key; additionally, the length of the return value may
   differ from that of <parameter>str</parameter>.
   However, this function will be the most efficient when all the keys have the
   same size.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       待转换的<type>字符串</type>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>from</parameter></term>
     <listitem>
      <para>
       <type>字符串</type>中与将要被转换的目的字符 <parameter>to</parameter> 相对应的源字符。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>to</parameter></term>
     <listitem>
      <para>
       <type>字符串</type>中与将要被转换的字符 <parameter>from</parameter> 相对应的目的字符。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace_pairs</parameter></term>
     <listitem>
      <para>
       参数 <parameter>replace_pairs</parameter> 可以用来取代 <parameter>to</parameter> 和 <parameter>from</parameter> 参数，因为它是以  <literal>array('from' => 'to', ...)</literal> 格式出现的数组。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   返回转换后的<type>字符串</type>。
  </para>
  <para>
   如果 <parameter>replace_pairs</parameter> 中包含一个空<type>字符串</type>（<literal>""</literal>）键，那么将返回 &false;。
   If the <parameter>str</parameter> is not a scalar
   then it is not typecasted into a string, instead a warning is raised and 
   &null; is returned. 
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>strtr</function> 范例</title>
    <programlisting role="php">
<![CDATA[
<?php
$addr = strtr($addr, "äåö", "aao");
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   The next example shows the behavior of <function>strtr</function> when
   called with only two arguments. Note the preference of the replacements
   (<literal>"h"</literal> is not picked because there are longer matches)
   and how replaced text was not searched again.
  </para>
  <example>
   <title>使用两个参数的 <function>strtr</function> 范例</title>
    <programlisting role="php">
<![CDATA[
<?php
$trans = array("hello" => "hi", "hi" => "hello");
echo strtr("hi all, I said hello", $trans);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
hello all, I said hi
]]>
    </screen>
  </example>
  <para>
   The two modes of behavior are substantially different. With three arguments,
   <function>strtr</function> will replace bytes; with two, it may replace
   longer substrings.
  </para>
  <example>
   <title><function>strtr</function> behavior comparison</title>
    <programlisting role="php">
<![CDATA[
<?php
echo strtr("baab", "ab", "01"),"\n";

$trans = array("ab" => "01");
echo strtr("baab", $trans);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
1001
ba01
]]>
    </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_replace</function></member>
    <member><function>preg_replace</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

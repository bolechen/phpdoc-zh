<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: 326796 Maintainer: nio Status: ready -->
<refentry xml:id="function.crc32" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>crc32</refname>
  <refpurpose>计算一个字符串的 crc32 多项式</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>crc32</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
  </methodsynopsis>
  <para>
   生成 <parameter>str</parameter>
   的 32 位循环冗余校验码多项式。这通常用于检查传输的数据是否完整。
  </para>
  <warning>
   <simpara>
    由于 PHP 的整数是带符号的，所以在 32 位系统上许多 crc32 校验码将返回负整数。
    尽管在 64 位上所有 <function>crc32</function> 的结果将都是正整数。
   </simpara>
   <simpara>
    因此你需要使用
    <function>sprintf</function> 或 <function>printf</function>
    的“%u”格式符来获取表示无符号 crc32 校验码的字符串。
   </simpara>
   <simpara>
    For a hexadecimal representation of the checksum you can either use the 
    "%x" formatter of <function>sprintf</function> or <function>printf</function> 
    or the <function>dechex</function> conversion functions, both of these
    also take care of converting the <function>crc32</function> result to
    an unsigned integer.
   </simpara>
   <simpara>
    Having 64bit installations also return negative integers for higher
    result values was considered but would break the hexadecimal conversion
    as negatives would get an extra 0xFFFFFFFF######## offset then. As 
    hexadecimal representation seems to be the most common use case we
    decided to not break this even if it breaks direct decimal comparisons
    in about 50% of the cases when moving from 32 to 64bits.
   </simpara>
   <simpara>
    In retrospect having the function return an integer maybe wasn't the 
    best idea and returning a hex string representation right away (as 
    e.g. <function>md5</function> does) might have been a better plan to
    begin with.
   </simpara>
   <simpara>
    For a more portable solution you may also consider the generic 
    <function>hash</function>. <code>hash("crc32b", $str)</code> will 
    return the same string as <code>dechex(crc32($str))</code>.
   </simpara>
  </warning>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
   <para>
    <variablelist>
     <varlistentry>
      <term><parameter>str</parameter></term>
      <listitem>
       <para>
        要校验的数据。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
   <para>
    返回 <parameter>str</parameter> crc32 校验的整数。
   </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>显示一个 crc32 校验码</title>
    <para>
     示例中的第二行演示了如何使用 <function>printf</function>
     函数转换校验码：
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$checksum = crc32("The quick brown fox jumped over the lazy dog.");
printf("%u\n", $checksum);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
   <para>
    <simplelist>
     <member><function>hash</function></member>
     <member><function>md5</function></member>
     <member><function>sha1</function></member>
    </simplelist>
   </para>
 </refsect1>
 
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: Avenger Status: ready -->
  <refentry xml:id="function.ftp-rawlist" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>ftp_rawlist</refname>
    <refpurpose>返回指定目录下文件的详细列表</refpurpose>
   </refnamediv>
   <refsect1 role="description">
    &reftitle.description;
    <methodsynopsis>
     <type>array</type><methodname>ftp_rawlist</methodname>
     <methodparam><type>resource</type><parameter>ftp_stream</parameter></methodparam>
     <methodparam><type>string</type><parameter>directory</parameter></methodparam>
    </methodsynopsis>
    <para>
     <function>ftp_rawlist</function> 函数将执行 FTP
     <command>LIST</command> 命令，并把结果做为一个数组返回。
    </para>
   </refsect1>
   <refsect1 role="parameters">
   &reftitle.parameters;
   <para>
    <variablelist>
     <varlistentry>
      <term><parameter>ftp_stream</parameter></term>
      <listitem>
       <para>
        FTP 连接资源。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><parameter>directory</parameter></term>
      <listitem>
       <para>
        目录路径。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><parameter>recursive</parameter></term>
      <listitem>
       <para>
        如果此参数为 &true;，实际执行的命令将会为 <command>LIST -R</command>。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   </refsect1>
   <refsect1 role="returnvalues">
   &reftitle.returnvalues;
   <para>
    返回一个数组，数组的每个元素为返回文本的每一行，输出结构不会被解析。使用函数
    <function>ftp_systype</function> 可以用来判断 FTP 服务器的类型，从而可以用来判断返回列表的类型。
   </para>
   </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>ftp_rawlist</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php

// set up basic connection
$conn_id = ftp_connect($ftp_server);

// login with username and password
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);

// get the file list for /
$buff = ftp_rawlist($conn_id, '/');

// close the connection
ftp_close($conn_id);

// output the buffer
var_dump($buff);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
array(3) {
  [0]=>
  string(65) "drwxr-x---   3 vincent  vincent      4096 Jul 12 12:16 public_ftp"
  [1]=>
  string(66) "drwxr-x---  15 vincent  vincent      4096 Nov  3 21:31 public_html"
  [2]=>
  string(73) "lrwxrwxrwx   1 vincent  vincent        11 Jul 12 12:16 www -> public_html"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.0</entry>
       <entry>
        增加 <parameter>recursive</parameter> 参数。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ftp_nlist</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334621 Maintainer: daijie Status: ready -->

<refentry xml:id="function.get-defined-constants" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>get_defined_constants</refname>
  <refpurpose>返回所有常量的关联数组，键是常量名，值是常量值</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>get_defined_constants</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>categorize</parameter><initializer>false</initializer></methodparam>
  </methodsynopsis>
  <para>
   返回当前所有已定义的常量名和值。
   这包含 <function>define</function> 函数所创建的，也包含了所有扩展所创建的。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>categorize</parameter></term>
     <listitem>
      <para>
       让此函数返回一个多维数组，分类为第一维的键名，常量和它们的值位于第二维。
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
define("MY_CONSTANT", 1);
print_r(get_defined_constants(true));
?>
]]>
        </programlisting>
        &example.outputs.similar;
        <screen>
<![CDATA[
Array
(
    [Core] => Array
        (
            [E_ERROR] => 1
            [E_WARNING] => 2
            [E_PARSE] => 4
            [E_NOTICE] => 8
            [E_CORE_ERROR] => 16
            [E_CORE_WARNING] => 32
            [E_COMPILE_ERROR] => 64
            [E_COMPILE_WARNING] => 128
            [E_USER_ERROR] => 256
            [E_USER_WARNING] => 512
            [E_USER_NOTICE] => 1024
            [E_ALL] => 2047
            [TRUE] => 1
        )

    [pcre] => Array
        (
            [PREG_PATTERN_ORDER] => 1
            [PREG_SET_ORDER] => 2
            [PREG_OFFSET_CAPTURE] => 256
            [PREG_SPLIT_NO_EMPTY] => 1
            [PREG_SPLIT_DELIM_CAPTURE] => 2
            [PREG_SPLIT_OFFSET_CAPTURE] => 4
            [PREG_GREP_INVERT] => 1
        )

    [user] => Array
        (
            [MY_CONSTANT] => 1
        )

)
]]>
        </screen>
       </informalexample>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    返回的数组为 常量名 => 常量值，也可以按注册变量的扩展名称来分组。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.1</entry>
       <entry>
        仅作用于 Windows：内核常量归类到 <literal>Core</literal>，之前是 <literal>mhash</literal>。
       </entry>
      </row>
      <row>
       <entry>5.3.0</entry>
       <entry>
        内核常量归类为 <literal>Core</literal>，之前是 <literal>internal</literal>。在 Windows 上，内核常量归类到 <literal>mhash</literal>。
       </entry>
      </row>
      <row>
       <entry>5.2.11</entry>
       <entry>
        <parameter>categorize</parameter> 参数现在可以合适得被处理。
        在此之前，<parameter>categorize</parameter> 被解释为 <literal>!is_null($categorize)</literal>，导致任何非 &null; 的值会强制常量分类。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>get_defined_constants</function> 例子</title>
    <programlisting role="php">
<![CDATA[
<?php
print_r(get_defined_constants());
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array
(
    [E_ERROR] => 1
    [E_WARNING] => 2
    [E_PARSE] => 4
    [E_NOTICE] => 8
    [E_CORE_ERROR] => 16
    [E_CORE_WARNING] => 32
    [E_COMPILE_ERROR] => 64
    [E_COMPILE_WARNING] => 128
    [E_USER_ERROR] => 256
    [E_USER_WARNING] => 512
    [E_USER_NOTICE] => 1024
    [E_ALL] => 2047
    [TRUE] => 1
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>defined</function></member>
    <member><function>get_loaded_extensions</function></member>
    <member><function>get_defined_functions</function></member>
    <member><function>get_defined_vars</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

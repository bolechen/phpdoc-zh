<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- Purpose: fileprocess.process -->
<!-- Membership: bundled -->
 
<book xml:id="book.pcntl" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>进程控制</title>
 <titleabbrev>PCNTL</titleabbrev>
 
 <!-- {{{ preface -->
 <preface xml:id="intro.pcntl">
  &reftitle.intro;
  <para>
  PHP的进程控制支持实现了Unix方式的进程创建, 程序执行, 信号处理以及进程的中断。
  进程控制不能被应用在Web服务器环境，当其被用于Web服务环境时可能会带来意外的结果。
  </para>
  <para>
  这份文档用于阐述每个进程控制函数的通常用法。关于Unix进程控制的更多信息建议您查阅
  系统文档中关于fork（2）,waitpid（2），signal（2）等的部分或更全面的参考资料比如
  《Unix环境高级编程》（作者：W. Richard Stevens，Addison-Wesley出版）。
  </para>
  <para>
  PCNTL现在使用了ticks作为信号处理的回调机制，ticks在速度上远远超过了之前的处理机制。
  这个变化与“用户ticks”遵循了相同的语义。您可以使用<function>declare</function>
  语句在程序中指定允许发生回调的位置。这使得我们对异步事件处理的开销最小化。在编译PHP时
  启用pcntl将始终承担这种开销，不论您的脚本中是否真正使用了pcntl。
  </para>
  <para>
  有一个调整是PHP 4.3.0之前的所有pcntl脚本要使其工作，要么在期望允许回调的（代码）部分使用
 <function>declare</function> ，要么使用<function>declare</function>新的全局语法
 使其在整个脚本范围有效。
  </para>

  &note.no-windows.extension;
 </preface>
 <!-- }}} -->
 
 &reference.pcntl.setup;
 &reference.pcntl.constants;
 &reference.pcntl.examples;
 &reference.pcntl.reference;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


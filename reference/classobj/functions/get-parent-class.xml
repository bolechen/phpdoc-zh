<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 323193 Maintainer: HonestQiao Status: ready -->
<!-- Reviewed: no Maintainer: HonestQiao -->
<!-- splitted from ./en/functions/classobj.xml, last change in rev 1.4 -->
<refentry xml:id="function.get-parent-class" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>get_parent_class</refname>
  <refpurpose>返回对象或类的父类名</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>get_parent_class</methodname>
   <methodparam choice="opt"><type>mixed</type><parameter>obj</parameter></methodparam>
  </methodsynopsis>
  <para>
   如果 <parameter>obj</parameter>
   是对象，则返回对象实例 <parameter>obj</parameter>
   所属类的父类名。
  </para>
  <para>
   如果 <parameter>obj</parameter>
   是字符串，则返回以此字符串为名的类的父类名。此功能是在
   PHP 4.0.5 中增加的。
  </para>
  <note>
   <para>
    自 PHP 5 起，如果在对象的方法内调用，则 <parameter>obj</parameter> 为可选项。
   </para>
  </note>
  <para>
   <example>
    <title>使用 <function>get_parent_class</function></title>
    <programlisting role="php">
<![CDATA[
<?php

class dad {
    function dad()
    {
    // implements some logic
    }
}

class child extends dad {
    function child()
    {
        echo "I'm " , get_parent_class($this) , "'s son\n";
    }
}

class child2 extends dad {
    function child2()
    {
        echo "I'm " , get_parent_class('child2') , "'s son too\n";
    }
}

$foo = new child();
$bar = new child2();

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
I'm dad's son
I'm dad's son too
]]>
    </screen>
   </example>
  </para>
  <para>
   参见 <function>get_class</function> 和
   <function>is_subclass_of</function>。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>object</parameter></term>
     <listitem>
      <para>
       The tested object or class name
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns the name of the parent class of the class of which
   <parameter>object</parameter> is an instance or the name.
  </para>
  <note>
   <para>
    If the object does not have a parent or the class given does not exist &false; will be returned.
   </para>
  </note>
  <para>
   If called without parameter outside object, this function returns &false;.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Before 5.1.0</entry>
       <entry>
        If called without parameter outside object, this function would have
        returned &null; with a warning.
       </entry>
      </row>
      <row>
       <entry>Since 5.0.0</entry>
       <entry>
        The <parameter>object</parameter> parameter is optional if called
        from the object's method.
       </entry>
      </row>
      <row>
       <entry>Since 4.0.5</entry>
       <entry>
        If <parameter>object</parameter> is a string, returns the name of the
        parent class of the class with that name.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Using <function>get_parent_class</function></title>
    <programlisting role="php">
<![CDATA[
<?php

class dad {
    function dad()
    {
    // implements some logic
    }
}

class child extends dad {
    function child()
    {
        echo "I'm " , get_parent_class($this) , "'s son\n";
    }
}

class child2 extends dad {
    function child2()
    {
        echo "I'm " , get_parent_class('child2') , "'s son too\n";
    }
}

$foo = new child();
$bar = new child2();

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
I'm dad's son
I'm dad's son too
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>get_class</function></member>
    <member><function>is_subclass_of</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

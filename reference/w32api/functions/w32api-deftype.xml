<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: HonestQiao Status: ready -->
<!-- Reviewed: no Maintainer: HonestQiao -->
<refentry xml:id="function.w32api-deftype" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>w32api_deftype</refname>
    <refpurpose>为 w32api_functions 函数定一个类型</refpurpose>
   </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
    <methodsynopsis>
     <type>bool</type><methodname>w32api_deftype</methodname>
     <methodparam><type>string</type><parameter>typename</parameter></methodparam>
     <methodparam><type>string</type><parameter>member1_type</parameter></methodparam>
     <methodparam><type>string</type><parameter>member1_name</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>...</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>...</parameter></methodparam>
    </methodsynopsis>
    &warn.experimental.func;
    <para>
     如果你希望为 win32api 调用定义一个类型，那么你就需要调用
     <function>w32api_deftype</function>函数。这个函数使得到 2n+1 个参数，n
     代表该类型有多少个成员。第一个参数是这个类型的名称。在这之后的是这各类型成员的名称（成对出现）。所有的类型名称大小写敏感。内建的类型名称应该使用小写。
     &return.success;
    </para>
   </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>typename</parameter></term>
     <listitem>
      <para>
       The name of the type.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>member1_type</parameter></term>
     <listitem>
      <para>
       A member type can be a user defined type. All the type names are case
       sensitive. Built in type names should be provided in lowercase.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>member1_name</parameter></term>
     <listitem>
      <para>
       The member name of <parameter>member1_type</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   This function takes 2n+1 arguments, where n is the number of members the
   type has. After that is the type of the member followed by the members
   name (in pairs). 
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &warn.experimental.func;
 </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

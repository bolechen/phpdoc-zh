<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: n/a Maintainer: lm92 Status: ready -->
 <chapter xml:id="security.intro" xmlns="http://docbook.org/ns/docbook">
  <title>简介</title>
  <simpara>
   PHP 作为一种强大的语言，无论是以模块还是 <acronym>CGI</acronym>
   的方式安装，它的解释器都可以在服务器上访问文件、运行命令以及创建网络连接等。这些功能也许会给服务器添加很多不安全因素，但是只要正确地安装和配置
   PHP，以及编写安全的代码，那么 PHP 相对于 Perl 和 C 来说，是能创建出更安全的
   CGI 程序的。而且，也可以在可用性和安全性之间找到一个很好的平衡点。
  </simpara>
  <simpara>
   PHP 可能会被用在很多不同的方面，因此，PHP
   内置的选项以方便用户对其进行配置。虽然众多的选项可以使 PHP
   完成很多工作，但是对这些选项的设定以及对服务器的配置很可能会产生安全问题。
  </simpara>
  <simpara>
   PHP 的选项与其语法一样，具有很高的灵活性。使用 PHP，可以在只有 shell
   用户权限的环境下创建完善的服务器端程序，或者在被严格限制环境下使用它来完成服务器端包含（Server-Side
   Includes）而无需承但太大的风险。如何建立这样一种环境，其安全性如何，很大程度上取决于
   PHP 的开发者。
  </simpara>
  <simpara>
   本章以一些常规的安全建议作开头，讲述如何在不同的环境下尽可能地提高安全性，以及介绍对于不同安全级别的一些编程原则。
  </simpara>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

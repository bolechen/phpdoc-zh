<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- $EN-Revision: 297078 $ -->
 <sect1 xml:id="internals2.buildsys.environment" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>PHP 扩展开发构建</title>
  <para>
   在一个典型的 PHP 安装中，高性能的需要几乎总是造成以调试的便利为代价的优化。这是产品所使用的合理折衷方案，但当开发扩展时却达不到标准。
   我们所需要的是 PHP 的安装包，以提示我们做什么事会出错。
  </para>
  
  <para>
   Zend 引擎提供了一个内存管理器，有在扩展中跟踪内存泄漏的能力并提供详尽的调试信息。跟踪在默认情况下是被禁用的，同时也是线程安全的。要打开的话，应将
   <option role="configure">--enable-debug</option> 和 <literal>--enable-maintainer-zts</literal> 选项与其他常用选项一起传给
   <filename>configure</filename>。要获得从源代码构建 PHP 的说明，请看位于 <xref linkend="install.general"/> 的说明。典型的
   <filename>configure</filename> 命令行可能看起来象这样：
   <programlisting role="shell">
<![CDATA[
$ ./configure --prefix=/where/to/install/php --enable-debug --enable-maintainer-zts --enable-cgi --enable-cli --with-mysql=/path/to/mysql
]]>
   </programlisting>
  </para>
 </sect1>

<!-- Write this later?  
 <sect1 xml:id="internals2.buildsys.environment.parallel">
  <title>Running debug and production PHP builds in parallel</title>
 </sect1>
-->

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

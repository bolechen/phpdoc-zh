<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322134 Maintainer: dallas Status: ready -->
<appendix xml:id="userlandnaming" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>用户空间命名指南</title>
 <para>
  以下是在用户空间 PHP 代码中怎样最佳选择标识符名称的指南。当在全局命名空间中选择创建的符号名称时，要考虑到以下指导方针以免未来的
  PHP 版本破坏掉用户使用的符号名称。
 </para>

 <section xml:id="userlandnaming.globalnamespace">
  <title>全局命名空间</title>
  <para>
   以下代码结构会进入全局命名空间：
  </para>

  <itemizedlist>
   <listitem><para>functions（函数）</para></listitem>
   <listitem><para>classes（类）</para></listitem>
   <listitem><para>interfaces（接口）</para></listitem>
   <listitem><para>constants（常量，并非类常量）</para></listitem>
   <listitem>
    <para>在函数／方法之外定义的变量</para>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="userlandnaming.rules">
  <title>规则</title>
  <para>
   以下列表指出了 PHP 工程在选择新的内部标识符时保留给自己的权利。最终指南是官方的<link
   xlink:href="&url.userlandnaming.cs;">编码标准</link>：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     PHP 拥有最顶层命名空间，但是会尝试找到合体的描述命名以避免任何明显的冲突。
    </para>
   </listitem>
   <listitem>
    <para>
     函数名在两个词中间使用下划线，类名则同时使用 <literal>camelCase</literal>
     和 <literal>PascalCase</literal> 规则。
    </para>
   </listitem>
   <listitem>
    <para>
     PHP 在任何扩展库的全局符号前附加上扩展库的名称（此规则在过去则有无数例外）。例如：
    </para>

    <itemizedlist>
     <listitem><para><function>curl_close</function></para></listitem>
     <listitem><para><function>mysql_query</function></para></listitem>
     <listitem><para>PREG_SPLIT_DELIM_CAPTURE</para></listitem>
     <listitem><para>new DOMDocument()</para></listitem>
     <listitem>
      <para>
       <function>strpos</function>（以前的一个失误例子）
      </para>
     </listitem>
     <listitem><para>new SplFileObject()</para></listitem>
    </itemizedlist>
   </listitem>
   <listitem>
    <para>
     Iterators 和 Exceptions 则只是简单加上
     "<literal>Iterator</literal>" 和 "<literal>Exception</literal>"
     后缀。例如：
    </para>
    <itemizedlist>
     <listitem><para><classname>ArrayIterator</classname></para></listitem>
     <listitem><para><classname>LogicException</classname></para></listitem>
    </itemizedlist>
   </listitem>
   <listitem>
    <para>
     PHP 保留所有以 <literal>__</literal>
     开头的符号作为魔术符号。建议用户不要在 PHP
     中创建以 <literal>__</literal> 打头的符号，除非是要使用有文档记载的魔术函数功能。例如：
    </para>
    <itemizedlist>
     <listitem><para><link linkend="object.get">__get()</link></para></listitem>
     <listitem><para><function>__autoload</function></para></listitem>
    </itemizedlist>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="userlandnaming.tips">
  <title>提示</title>
  <para>
   要写出能经受住时间考验的代码，建议给任何进入全局命名空间的符号都加上一个不常见的
   3-4 字母的前缀（或后缀），中间用下划线分开。为了避免与其它用户空间代码出现命名空间冲突，建议先研究一下其它项目中已有的前缀（或后缀）并适当地公布出来。示例如下：
  </para>

  <itemizedlist>
   <listitem><para>MyPx_someFunc()</para></listitem>
   <listitem><para>Foo_Date</para></listitem>
   <listitem><para>$asdf_dbh</para></listitem>
  </itemizedlist>
 </section>

</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

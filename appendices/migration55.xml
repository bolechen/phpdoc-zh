<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 329930 Maintainer: ichenshy Status: ready -->
<!-- Reviewed: no -->

<!-- Based on UPGRADING version 322438. Work in progess !-->

<appendix xml:id="migration55" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>从 PHP 5.4.x 迁移到 PHP 5.5.x</title>
 <simpara>
  &manual.migration.seealso;
  <link linkend="migration5">5.0.x</link> 、 <link linkend="migration51">5.1.x</link> 、 <link linkend="migration53">5.3.x</link> 以及 <link linkend="migration53">5.4.x</link>。
 </simpara>

 <sect1 xml:id="migration55.changes">
  <title>PHP 5.5.x 中的变更</title>
  <simpara>
   PHP 5.5.x 中的大多数改进对现有代码不会有影响。 在生产环境中切换 PHP 版本前应考虑 <link linkend="migration55.incompatible">少许不兼容</link> 和 <link linkend="migration55.new-features">新特性</link>，并严格测试代码。
  </simpara>
  <simpara>
   想要从一个较老的 PHP 版本升级系统，可使用下列相关文档：
  </simpara>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="migration54">PHP 5.4.x 升级说明</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration53">PHP 5.3.x 升级说明</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration52">PHP 5.2.x 升级说明</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration51">PHP 5.1.x 升级说明</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration5">从 PHP 4 迁移到 PHP 5</link>.
    </simpara>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 xml:id="migration55.incompatible">
  <title>不向后兼容的变更</title>
  <simpara>
   尽管大部分现有的 PHP 5 代码不需要更改就可以正常运行，但请注意一些不向后兼容的变更：
  </simpara>
  
  <sect2 xml:id="migration55.incompatible.windows">
   <title>不再支持 Windows XP 和 2003</title>
   
   <para>
    已放弃对 Windows XP 和 2003 的支持。构建 Windows 版本的 PHP 需要 Windows Vista 或更新的系统。
   </para>
  </sect2>

  <sect2 xml:id="migration55.incompatible.case">
   <title>Case insensitivity no longer locale specific</title>
   
   <para>
    All case insensitive matching for function, class and constant names is
    now performed in a locale independent manner according to ASCII rules.
    This improves support for languages using the Latin alphabet with unusual
    collating rules, such as Turkish and Azeri.
   </para>
   <para>
    This may cause issues for code that uses case insensitive matches for
    non-ASCII characters in multibyte character sets (including UTF-8), such
    as accented characters in many European languages. If you have a
    non-English, non-ASCII code base, then you will need to test that you are
    not inadvertently relying on this behaviour before deploying PHP 5.5 to
    production systems.
   </para>
  </sect2>

  <sect2 xml:id="migration55.incompatible.pack">
   <title><function>pack</function> 和 <function>unpack</function> 函数的变化</title>

   <para>
    为使 <function>pack</function> 和 <function>unpack</function> 更兼容 Perl 做了一些变更：
   </para>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>pack</function> 现在支持“Z”格式代码，其表现的行为与“a”相同。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>unpack</function> now support the "Z" format code for NULL
      padded strings, and behaves as "a" did in previous versions: it will
      strip trailing NULL bytes.且其行为类似上一个版本中的“a”：清除后面的 NULL 字节。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>unpack</function> now keeps trailing NULL bytes when the "a"
      format code is used.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>unpack</function> now strips all trailing ASCII whitespace
      when the "A" format code is used.
     </simpara>
    </listitem>
   </itemizedlist>

   <para>
    Writing backward compatible code that uses the "a" format code with
    <function>unpack</function> requires the use of
    <function>version_compare</function>, due to the backward compatibility
    break.
   </para>
   <para>
    例如：
   </para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
// 以前的代码：
$data = unpack('a5', $packed);

// 新的代码：
if (version_compare(PHP_VERSION, '5.5.0-dev', '>=')) {
  $data = unpack('Z5', $packed);
} else {
  $data = unpack('a5', $packed);
}
?>
]]>
    </programlisting>
   </informalexample>
  </sect2>

  <sect2 xml:id="migration55.incompatible.guid">
   <title> 移除 PHP logo GUIDs </title>

   <para>
    The GUIDs that previously resulted in PHP outputting various logos have
    been removed. This includes the removal of the functions to return those
    GUIDs. The removed functions are:
   </para>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>php_logo_guid</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>php_egg_logo_guid</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>php_real_logo_guid</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>zend_logo_guid</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="migration55.incompatible.execution">
   <title>Internal execution changes</title>

   <para>
    Extension authors should note that the <command>zend_execute()</command>
    function can no longer be overridden, and that numerous changes have been
    made to the <literal>execute_data</literal> struct and related function
    and method handling opcodes.
   </para>

   <para>
    Most extension authors are unlikely to be affected, but those writing
    extensions that hook deeply into the Zend Engine should read
    <link linkend="migration55.internals">the notes on these changes</link>.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.new-features">
  <title>新的特性</title>

  <sect2 xml:id="migration55.new-features.generators">
   <title>新增 <link linkend="language.generators">Generators</link></title>

   <para>
    Support for <link linkend="language.generators">generators</link> has been
    added via the <command>yield</command> keyword. Generators provide an easy
    way to implement simple iterators without the overhead or complexity of
    implementing a class that implements the <classname>Iterator</classname>
    interface.
   </para>

   <para>
    A simple example that reimplements the <function>range</function>
    function as a generator (at least for positive <literal>step</literal>
    values):
   </para>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function xrange($start, $limit, $step = 1) {
    for ($i = $start; $i <= $limit; $i += $step) {
        yield $i;
    }
}

echo 'Single digit odd numbers: ';

/* 注意保存在内存中的数组绝不会被创建或返回 */ 
foreach (xrange(1, 9, 2) as $number) {
    echo "$number ";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Single digit odd numbers: 1 3 5 7 9 
]]>
    </screen>
   </informalexample>
  </sect2>

  <sect2 xml:id="migration55.new-features.finally">
   <title>新增 <link linkend="language.exceptions"><literal>finally</literal></link> 关键字</title>

   <para>
    <literal>try</literal>-<literal>catch</literal> blocks now support a
    <link linkend="language.exceptions"><literal>finally</literal></link>
    block for code that should be run regardless of whether an exception has
    been thrown or not.
   </para>
  </sect2>

  <sect2 xml:id="migration55.new-features.foreach-list">
   <title><link linkend="control-structures.foreach"><literal>foreach</literal></link> 现在支持 <function>list</function></title>

   <para>
   <link linkend="control-structures.foreach">foreach</link> 控制结构现在支持通过 <function>list</function> 构造将嵌套数组分离到单独的变量。例如：
   </para>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$array = [
    [1, 2],
    [3, 4],
];

foreach ($array as list($a, $b)) {
    echo "A: $a; B: $b\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
A: 1; B: 2
A: 3; B: 4
]]>
    </screen>
   </informalexample>

   <para>
    关于 <link linkend="control-structures.foreach.list">foreach</link> 更深入的文档可参考相关手册页面。
   </para>
  </sect2>

  <sect2 xml:id="migration55.new-features.empty">
   <title><function>empty</function> 支持任意表达式</title>

   <para>
    <function>empty</function> 现在支持传入一个任意表达式，而不仅是一个变量。例如：
   </para>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function always_false() {
    return false;
}

if (empty(always_false())) {
    echo 'This will be printed.';
}

if (empty(true)) {
    echo 'This will not be printed.';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
This will be printed.
]]>
    </screen>
   </informalexample>
  </sect2>

  <sect2 xml:id="migration55.new-features.const-dereferencing">
   <title><type>array</type> and <type>string</type> literal dereferencing</title>

   <para>
    <type>Array</type> and <type>string</type> literals can now be
    dereferenced directly to access individual elements and characters:

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
echo 'Array dereferencing: ';
echo [1, 2, 3][0];
echo "\n";

echo 'String dereferencing: ';
echo 'PHP'[0];
echo "\n";
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
Array dereferencing: 1
String dereferencing: P
]]>
     </screen>
    </informalexample>
   </para>
  </sect2>

  <sect2 xml:id="migration55.new-features.password">
   <title>新的密码哈希 API</title>

   <para>
    A <link linkend="book.password">新的密码哈希 API</link> that makes
    it easier to securely hash and manage passwords using the same underlying
    library as <function>crypt</function> in PHP has been added. See the
    documentation for <function>password_hash</function> for more detail.
   </para>
  </sect2>

  <sect2 xml:id="migration55.new-features.windows-apache">
   <title>Apache 2.4 handler supported on Windows</title>

   <para>
    The Apache 2.4 handler SAPI is now supported on Windows.
   </para>
  </sect2>

  <sect2 xml:id="migration55.new-features.gd">
   <title>改进 GD</title>

   <para>
    对 GD 扩展做了多方面的改进，包括：
   </para>

   <itemizedlist>
    <listitem>
     <simpara>
      翻转支持使用新的 <function>imageflip</function> 函数。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      高级裁剪支持使用 <function>imagecrop</function> &amp;  <function>imagecropauto</function> 函数。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      WebP 的读写分别支持使用 <function>imagecreatefromwebp</function> &amp; <function>imagewebp</function> 。
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.deprecated">
  <title>PHP 5.5.x 中废弃的特性</title>

  <sect2 xml:id="migration55.deprecated.mysql">
   <title>废弃 <link linkend="book.mysql">ext/mysql</link></title>

   <para>
    <link linkend="book.mysql">原始的 MySQL 扩展</link> 现在被废弃，当连接到数据库时会产生一个 <constant>E_DEPRECATED</constant> 错误。可使用 <link linkend="book.mysqli">MySQLi</link> 或 <link linkend="ref.pdo-mysql">PDO_MySQL</link> 扩展作为替代。
   </para>
  </sect2>

  <sect2 xml:id="migration55.deprecated.preg-replace-e">
   <title><function>preg_replace</function> 中的 <literal>/e</literal> 修饰符</title>

   <para>
   <function>preg_replace</function> 函数中用到的 <literal>/e</literal> 修饰符现在被弃用。可以使用 <function>preg_replace_callback</function> 函数来替代。
   </para>
  </sect2>

  <sect2 xml:id="migration55.deprecated.intl">
   <title><link linkend="book.intl">intl</link> 中的废弃</title>

   <para>
    <methodname>IntlDateFormatter::setTimeZoneID</methodname> 和 <function>datefmt_set_timezone_id</function> 现在被废弃。可分别使用 <methodname>IntlDateFormatter::setTimeZone</methodname> 方法和 <function>datefmt_set_timezone</function> 函数作为替代。
   </para>
  </sect2>

  <sect2 xml:id="migration55.deprecated.mcrypt">
   <title><link linkend="book.mcrypt">mcrypt</link> 中的废弃</title>

   <simpara>
    下列函数已被废弃：
   </simpara>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>mcrypt_cbc</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>mcrypt_cfb</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>mcrypt_ecb</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>mcrypt_ofb</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.changed-functions">
  <title>变更的函数</title>

  <sect2 xml:id="migration55.changed-functions.core">
   <title>PHP 核心</title>

   <itemizedlist>
    <listitem>
     <simpara>
      使用 &null; 作为参数调用 <function>set_error_handler</function> 将重置错误处理程序。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      当使用 &null; 调用<function>set_error_handler</function> 和 <function>set_exception_handler</function> 时， 现在分别返回上一个错误或异常处理程序。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>pack</function> 和 <function>unpack</function> 使用 “a”和“A”格式代码时的行为有所变化。
      <link linkend="migration55.incompatible.pack">Detailed notes on these changes are available.</link>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="migration55.changed-functions.intl">
   <title><link linkend="book.intl">intl</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <methodname>MessageFormatter::format</methodname> 及其相关函数现在 related functions
      now accept named arguments and mixed numeric and named arguments when PHP
      is linked to ICU 4.8 or later.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>MessageFormatter::format</methodname> and related functions
      no longer error when an insufficient number of arguments have been
      provided. Instead, the placeholders will not be substituted.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>MessageFormatter::format</methodname> and
      <methodname>MessageFormatter::parse</methodname> are no longer limited to
      second precision when dealing with times.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::__construct</methodname> and
      <function>datefmt_create</function> now accept
      <classname>IntlTimeZone</classname> and
      <classname>DateTimeZone</classname> objects for the
      <parameter>timezone</parameter> argument, and
      <classname>IntlCalendar</classname> objects for the
      <parameter>calendar</parameter> argument. Furthermore, if the time zone
      is omitted and the <parameter>calendar</parameter> doesn't specify a time
      zone, PHP's default time zone from
      <function>date_default_timezone_get</function> is now used instead of the
      default ICU time zone.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::getCalendar</methodname> and
      <function>datefmt_get_calendar</function> return false if the
      <classname>IntlDateFormatter</classname> object was created with an
      <classname>IntlCalendar</classname> instance instead of one of the
      <classname>IntlDateFormatter</classname> constants.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      除 <classname>IntlDateFormatter</classname> 常量之外，<methodname>IntlDateFormatter::setCalendar</methodname> 和 <function>datefmt_set_calendar</function>现在接受 <classname>IntlCalendar</classname> 对象。
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::format</methodname> 和 <function>datefmt_format</function> 现在接受 <classname>IntlCalendar</classname> 对象。
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.new-functions">
  <title>新的函数</title>

  <sect2 xml:id="migration55.new-functions.core">
   <title>PHP 核心</title>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>array_column</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>boolval</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_get_info</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_hash</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_needs_rehash</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_verify</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="migration55.new-functions.hash">
   <title><link linkend="book.hash">Hash</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>hash_pbkdf2</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="migration55.new-functions.gd">
   <title><link linkend="book.image">GD</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>imageaffinematrixconcat</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>imageaffinematrixget</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>imagecrop</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>imagecropauto</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>imageflip</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>imagepalettetotruecolor</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>imagescale</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.new-functions.intl">
   <title><link linkend="book.intl">Intl</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>datefmt_format_object</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_get_calendar_object</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_get_timezone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_set_timezone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_get_calendar_object</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_create_instance</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_keyword_values_for_locale</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_now</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_available_locales</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_add</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_after</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_before</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_roll</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_clear</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_field_difference</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_actual_maximum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_actual_minimum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_day_of_week_type</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_first_day_of_week</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_greatest_minimum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_least_maximum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_locale</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_maximum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_minimal_days_in_first_week</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_minimum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_type</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_weekend_transition</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_in_daylight_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_equivalent_to</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_lenient</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_set</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_weekend</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_first_day_of_week</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_lenient</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_equals</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_repeated_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_skipped_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_repeated_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_skipped_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_from_date_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_to_date_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_error_code</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_error_message</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_create_instance</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_set_gregorian_change</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_get_gregorian_change</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_is_leap_year</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_default</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_id</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_gmt</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_unknown</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_enumeration</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_count_equivalent_ids</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_time_zone_id_enumeration</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_canonical_id</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_region</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_tz_data_version</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_equivalent_id</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_use_daylight_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_offset</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_raw_offset</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_has_same_rules</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_display_name</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_dst_savings</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_from_date_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_to_date_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_error_code</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_error_message</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="migration55.new-features.spl">
   <title><link linkend="book.spl">SPL</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <methodname>SplFixedArray::__wakeup</methodname>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.classes">
  <title>新的类和接口</title>

  <sect2 xml:id="migration55.classes.intl">
   <title><link linkend="book.intl">Intl</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <classname>IntlCalendar</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlGregorianCalendar</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlTimeZone</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlBreakIterator</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlRuleBasedBreakIterator</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlCodePointBreakIterator</classname>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.new-methods">
  <title>新的方法</title>

  <sect2 xml:id="migration55.new-methods.intl">
   <title><link linkend="book.intl">Intl</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::formatObject</methodname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::getCalendarObject</methodname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::getTimeZone</methodname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::setTimeZone</methodname>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.extensions-other">
  <title>扩展中的其他变更</title>

  <sect2 xml:id="migration55.extensions-other.intl">
   <title><link linkend="book.intl">Intl</link></title>

   <para>
    <link linkend="book.intl">intl</link> 扩展现在需要 ICU 4.0 或更高版本。
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.global-constants">
  <title>新的全局常量</title>

  <sect2 xml:id="migration55.global-constants.gd">
   <title><link linkend="book.image">GD</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <constant>IMG_AFFINE_TRANSLATE</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_AFFINE_SCALE</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_AFFINE_ROTATE</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_AFFINE_SHEAR_HORIZONTAL</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_AFFINE_SHEAR_VERTICAL</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_CROP_DEFAULT</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_CROP_TRANSPARENT</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_CROP_BLACK</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_CROP_WHITE</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_CROP_SIDES</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_FLIP_BOTH</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_FLIP_HORIZONTAL</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_FLIP_VERTICAL</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_BELL</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_BESSEL</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_BICUBIC</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_BICUBIC_FIXED</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_BLACKMAN</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_BOX</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_BSPLINE</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_CATMULLROM</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_GAUSSIAN</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_GENERALIZED_CUBIC</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_HERMITE</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_HAMMING</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_HANNING</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_MITCHELL</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_POWER</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_QUADRATIC</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_SINC</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_NEAREST_NEIGHBOUR</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_WEIGHTED4</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_TRIANGLE</constant>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="migration55.global-constants.mysqli">
   <title><link linkend="book.mysqli">MySQLi</link></title>

   <para>
    为使用 <function>mysqli_options</function> 新增一个 <constant>MYSQLI_SERVER_PUBLIC_KEY</constant> 选项。
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.ini">
  <title>INI 文件处理的变化</title>

  <sect2 xml:id="migrations55.ini.intl">
   <title><link linkend="book.intl">Intl</link></title>

   <para>
    新增 <literal>intl.use_exceptions</literal> 配置指令，当发生全局错误时，连同已经现存的 <literal>intl.error_level</literal> 配置指令一起用来控制 intl 的行为。
   </para>
  </sect2>

  <sect2 xml:id="migration55.ini.mysqlnd">
   <title><link linkend="book.mysqlnd">MySQLnd</link></title>

   <para>
    新增 <literal>mysqlnd.sha256_server_public_key</literal> 配置指令来允许 <link linkend="book.mysqli">mysqli</link> 使用新的MySQL 认证协议。
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.internals">
  <title>PHP 内部的变化</title>

  <itemizedlist>
   <listitem>
    <simpara>
     Extensions cannot override <command>zend_execute()</command> any more and
     should override <command>zend_execute_ex()</command> instead.
     <literal>EG(current_execute_data)</literal> is already initialized in
     <command>zend_execute_ex()</command>, so for compatibility extensions may
     need to use
     <literal>EG(current_execute_data)-&gt;prev_execute_data</literal> instead.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     移除 <literal>EG(arg_types_stack)</literal> 、<literal>EX(fbc)</literal> 、 <literal>EX(called_scope)</literal> 以及<literal>EX(current_object)</literal> 。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Added <literal>op_array-&gt;nested_calls</literal>, which is calculated
     at compile time.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Added <literal>EX(call_slots)</literal>, which is an array to store
     information about syntaticaly nested calls (e.g.
     <literal>foo(bar())</literal>) and is preallocated together with
     <literal>execute_data</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Added <literal>EX(call)</literal>, which is a pointer to a current
     calling function, and is an element of <literal>EX(call_slots)</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Opcodes
     <link linkend="internals2.opcodes.init-method-call">INIT_METHOD_CALL</link>,
     <link linkend="internals2.opcodes.init-static-method-call">ZEND_INIT_STATIC_METHOD_CALL</link>,
     <link linkend="internals2.opcodes.init-fcall-by-name">ZEND_INIT_FCALL_BY_NAME</link>
     and
     <link linkend="internals2.opcodes.init-ns-fcall-by-name">ZEND_INIT_NS_FCALL_BY_NAME</link>
     use <literal>result.num</literal> as an index in
     <literal>EX(call_slots)</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Opcode <link linkend="internals2.opcodes.new">ZEND_NEW</link> uses
     <literal>extended_value</literal> as an index in
     <literal>EX(call_slots)</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Opcodes <link linkend="internals2.opcodes.do-fcall">ZEND_DO_FCALL</link>
     and
     <link linkend="internals2.opcodes.do-fcall-by-name">ZEND_DO_FCALL_BY_NAME</link>
     use <literal>op2.num</literal> as an index in
     <literal>EX(call_slots)</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Added <literal>op_array-&gt;used_stack</literal>, which is calculated at
     compile time; the corresponding stack space is preallocated together with
     <literal>execute_data</literal>. As a result, the ZEND_SEND* and
     ZEND_DO_FCALL* opcodes no longer need to check for stack overflow.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Removed <literal>execute_data-&gt;Ts</literal> field. The VM temporary
     variables are always allocated immediately before the
     <literal>execute_data</literal> structure, and are now accessed by their
     offset from the <literal>execute_data</literal> base pointer instead of
     via <literal>execute_data-&gt;Ts</literal>.  The compiler stores new
     offsets in <literal>op_array-&gt;opcodes[*].op?.num</literal>.  The
     <command>EX_TMP_VAR()</command> and <command>EX_TMP_VAR_NUM()</command>
     macros can be used to access temporary variables by offset or number. You
     can convert the number to an offset using <command>EX_TMP_VAR_NUM(0,
     num)</command> or offset to number using
     <command>(EX_TMP_VAR_NUM(0,0)-EX_TMP_VAR(0,offset))</command>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     移除 <literal>execute_data-&gt;CVs</literal> 字段。The VM
     compiled variables are always allocated immediately after the
     <literal>execute_data</literal> structure, and are now accessed by the
     offset from the <literal>execute_data</literal> base pointer instead of
     via <literal>execute_data-&gt;CVs</literal>. You can use the
     <command>EX_CV_NUM()</command> macro to access compiled variables by
    </simpara>
   </listitem>
  </itemizedlist>
 </sect1>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334639 Maintainer: daijie Status: ready -->
<!-- Reviewed: no -->

<sect1 xml:id="migration56.changed-functions">
 <title>函数的变化</title>

 <sect2 xml:id="migration56.changed-functions.core">
  <title>PHP 内核</title>

  <itemizedlist>
   <listitem>
    <simpara>
     如果省略 <parameter>salt</parameter> 参数，<function>crypt</function> 会产生
     <constant>E_NOTICE</constant>错误。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>substr_compare</function> 的 <parameter>length</parameter> 参数现在接受 <literal>0</literal> 的值。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>unserialize</function> will now fail if passed serialised data
     that has been manipulated to attempt to instantiate an object without
     calling its constructor.
    </simpara>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration56.changed-functions.curl">
  <title><link linkend="book.curl">cURL</link></title>

  <itemizedlist>
   <listitem>
    <simpara>
     只有设置  <constant>CURLOPT_SAFE_UPLOAD</constant>  为 &false; 的情况下，
     才接受 <literal>@file</literal> 语法上传文件。
     最好使用 <classname>CURLFile</classname> 代替。
    </simpara>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration56.changed-functions.mcrypt">
  <title><link linkend="book.mcrypt">Mcrypt</link></title>

  <itemizedlist>
   <listitem>
    <simpara>
     <function>mcrypt_create_iv</function> 的 <parameter>source</parameter>
     现在默认值是
     <constant>MCRYPT_DEV_URANDOM</constant>，而非
     <constant>MCRYPT_DEV_RANDOM</constant>。
    </simpara>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration56.changed-functions.openssl">
  <title><link linkend="book.openssl">OpenSSL</link></title>

  <itemizedlist>
   <listitem>
    <simpara>
     如果 SSL 上下文选项已经提供 <parameter>crypto_type</parameter> 选项，
     <function>stream_socket_enable_crypto</function> 可以忽略 <parameter>crypto_type</parameter> 参数。
    </simpara>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration56.changed-functions.pgsql">
  <title><link linkend="book.pgsql">PostgreSQL</link></title>

  <itemizedlist>
   <listitem>
    <simpara>
     <function>pg_insert</function>、<function>pg_select</function>、
     <function>pg_update</function>、<function>pg_delete</function> 不再是实验性质的。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     如果数据库连接 socket 流设置为非阻塞（non-blocking）模式，
     <function>pg_send_execute</function>、
     <function>pg_send_prepare</function>、<function>pg_send_query</function>
     、<function>pg_send_query_params</function> 不再会阻塞查询直到写入完成。
    </simpara>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration56.changed-functions.reflection">
  <title><link linkend="book.reflection">Reflection</link></title>

  <itemizedlist>
   <listitem>
    <simpara>
     <methodname>ReflectionClass::newInstanceWithoutConstructor</methodname>
    现在允许非 Final 的内部类实例化。
    </simpara>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration56.changed-functions.xmlreader">
  <title><link linkend="book.xmlreader">XMLReader</link></title>

  <itemizedlist>
   <listitem>
    <simpara>
     和 <methodname>XMLReader::getAttribute</methodname> 一样，未找到属性的情况下，
     <methodname>XMLReader::getAttributeNs</methodname> 和
     <methodname>XMLReader::getAttributeNo</methodname> 会返回 &null; 。
    </simpara>
   </listitem>
  </itemizedlist>
 </sect2>
</sect1>



<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
